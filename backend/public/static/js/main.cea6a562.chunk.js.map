{"version":3,"sources":["shared/util/color.ts","shared/util/theme.ts","shared/components/Navigation/MainHeaderOfAdmin.tsx","shared/components/Navigation/SideBarOfAdmin.tsx","shared/components/Navigation/MainNavigationOfAdmin.tsx","Admin/pages/Admin.tsx","shared/components/Navigation/SideBarOfRegistration.tsx","Regist/components/Welcome.tsx","Regist/registSlice.ts","Regist/components/StepOne.tsx","Regist/components/StepTwo.tsx","Regist/components/StepThree.tsx","appSlice.ts","Regist/components/StepFour.tsx","Regist/components/StepFinish.tsx","Regist/pages/RegistStep.tsx","Auth/authSlice.ts","Regist/pages/RegistUser.tsx","Regist/components/InviteeWelcome.tsx","Regist/components/InviteeStepOne.tsx","Regist/components/InviteeStepTwo.tsx","Regist/components/InviteeStepThree.tsx","Regist/pages/RegistInvitee.tsx","Regist/pages/Regist.tsx","shared/components/Navigation/SideBarOfWorkSpaces.tsx","WorkSpaces/components/WorkSpaceItem.tsx","WorkSpaces/workspaceSlice.ts","WorkSpaces/components/WorkSpaceList.tsx","WorkSpaces/pages/WorkSpaces.tsx","Dashboard/Task/taskSlice.ts","Dashboard/Task/components/TaskItem.tsx","Dashboard/Task/components/TaskList.tsx","shared/components/Common/VwDrawer.tsx","Dashboard/Task/components/TaskAddButtonAfetrWorkDrawer.tsx","Dashboard/Task/components/AddedTaskTextAfterWorkDrawer.tsx","Dashboard/Attendance/attendanceSlice.ts","Dashboard/Attendance/components/CheckAttendanceArea.tsx","Dashboard/Project/components/ProjectItem.tsx","Dashboard/Project/projectSlice.ts","Dashboard/Project/components/ProjectList.tsx","shared/components/Navigation/MainHeader.tsx","Dashboard/dashboardSlice.ts","Dashboard/pages/Home.tsx","Dashboard/Task/components/TaskAddButton.tsx","Dashboard/Task/pages/MyTask.tsx","Dashboard/Members/components/MemberItem.tsx","Dashboard/Members/components/MemberList.tsx","Dashboard/Members/pages/Members.tsx","Dashboard/Attendance/components/DatePickerArea.tsx","Dashboard/Attendance/components/AttendanceItem.tsx","Dashboard/Attendance/components/AttendanceList.tsx","Dashboard/Attendance/pages/MyAttendance.tsx","Dashboard/Project/components/AddButtonInProject.tsx","Dashboard/Project/components/ProjectMemberItem.tsx","Dashboard/Project/components/AddMemberList.tsx","Dashboard/Project/components/NewAddProjectMemberDrawer.tsx","Dashboard/Project/components/ProjectMemberList.tsx","Dashboard/Project/pages/Project.tsx","Dashboard/Project/components/SideProjectItem.tsx","Dashboard/Project/components/SideProjectList.tsx","Dashboard/Project/components/MyProject.tsx","shared/components/Navigation/SideBar.tsx","shared/components/Navigation/MainNavigation.tsx","Dashboard/Project/components/NewProjectDrawer.tsx","Dashboard/components/InviteMemberInAddIconDrawer.tsx","Dashboard/Project/components/SetProfileInAvatarIconDrawer.tsx","Dashboard/Task/components/TaskForm.tsx","Dashboard/Task/components/TaskCardClickedDrawer.tsx","Dashboard/Task/components/NewTaskAddDrawer.tsx","Dashboard/Attendance/components/CheckAttendanceAreaInDetail.tsx","Dashboard/Attendance/components/KintaiCardClickedDrawer.tsx","Dashboard/Project/components/ProjectMemberClickedDrawer.tsx","Dashboard/Members/components/MemberDetail.tsx","Dashboard/pages/Dashboard.tsx","Auth/components/FormArea.tsx","Auth/pages/SignUp.tsx","Auth/pages/Login.tsx","Auth/pages/ForgotPassword.tsx","Auth/pages/ResetPassword.tsx","Auth/pages/DoneForgotPassword.tsx","Auth/pages/Auth.tsx","App.tsx","serviceWorker.ts","Dashboard/Members/memberSlice.ts","store.ts","index.tsx"],"names":["Color","PROJECT_COLORS","VWORK_BLUE","VWORK_RED","VWORK_ORANGE","VWORK_GREEN","VWORK_DARK_BLUE","VWORK_DARK_RED","VWORK_YELLOW","theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","boxShadow","appBarShift","width","marginLeft","easeOut","enteringScreen","hide","menuIcon","fontSize","color","VWORK_GRAY","title","MainHeaderOfAdmin","handleDrawerOpen","open","classes","className","Container","AppBar","style","backgroundColor","VWORK_WHITE","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Grid","container","direction","justify","alignItems","item","Typography","variant","noWrap","Avatar","alt","src","drawer","flexShrink","VWORK_BLACK","drawerPaper","fontWeight","mainTitle","paddingLeft","drawerHeader","padding","spacing","mixins","toolbar","justifyContent","icon","SideBarOfAdmin","handleDrawerClose","maxWidth","Drawer","anchor","paper","Box","ml","process","height","paddingRight","List","ListItem","button","component","NavLink","to","exact","ListItemIcon","ListItemText","MainNavigationOfAdmin","React","useState","setOpen","Admin","iconStyle","projectTitle","marginTop","marginBottom","SideBarOfRegistration","borderBottom","span","borderRadius","right","bottom","marginRight","Welcome","DialogTitle","id","mt","DialogContent","DialogContentText","DialogActions","Button","apiUrl","token","localStorage","inviteeToken","Itoken","fetchAsyncRegistUser","createAsyncThunk","regist","a","axios","post","headers","Authorization","res","data","fetchAsyncInvitation","queryToken","console","log","get","fetchAsyncRegistInvitee","registSlice","createSlice","name","initialState","workspace","user","project","description","invitations","invite","email","password","registration","reducers","editWorkspace","state","action","payload","editUser","editProject","editInvitations","editInviteToken","editInviteUser","extraReducers","builder","addCase","fulfilled","window","location","href","rejected","setItem","actions","selectRegist","selectInviteUser","selectInviteUserMail","selectInviteUserName","StepOne","steps","dispatch","useDispatch","history","useHistory","Stepper","activeStep","Number","pathname","slice","alternativeLabel","map","label","Step","key","StepLabel","initialValues","validationSchema","Yup","shape","required","onSubmit","value","push","TextField","placeholder","margin","fullWidth","type","StepTwo","formArea","overflowY","overflowX","StepThree","of","values","render","arrayHelpers","invitation","index","xs","remove","appSlice","loading","openMenu","addProjectButton","inviteMemberClicked","setProfileClicked","taskCardClicked","addTaskButton","kintaiCardClicked","addButtonAfterTask","addedTaskText","addMemberButton","memberIconClicked","toggleLoading","toggleOpenMenu","toggleAddProjectButton","toggleInviteMemberClicked","toggleSetProfileClicked","toggleTaskCardClicked","toggleAddTaskButton","toggleKintaiCardClicked","toggleAddButtonAfterTask","toggleAddedTaskText","toggleAddMemberButton","toggleMemberIconClicked","selectLoader","app","selectOpenMenu","selectAddProjectButton","selectInviteMemberClicked","selectSetProfileClicked","selectTaskCardClicked","selectAddTaskButton","selectKintaiCardClicked","selectAddButtonAfterTask","selectAddedTaskText","selectAddMemberButton","selectMemberIconClicked","StepFour","useSelector","updatedRegist","multiline","StepFinish","go","RegistStep","path","fetchAsyncLogin","auth","fetchAsyncSignup","fetchAsyncCurrentUser","fetchAsyncLogout","fetchAsyncUpdateUser","put","userId","postData","fetchAsyncForgotPassword","fetchAsyncResetPassword","resetToken","authSlice","_id","role","lastAccessWorkspace","workspaceCount","owner","errorMessage","errorOpen","profile","setErrorOpen","setUser","wc","includes","clear","toast","error","POSITION","TOP_CENTER","selectUser","selectProfile","selectWorkspace","selectWorkspaceName","selectErrorMessage","selectErrorOpen","RegistUser","fetchUser","useCallback","mounted","useRef","useEffect","current","dialog","InviteeWelcome","getInvitation","query","search","textDecoration","InviteeStepOne","inviteUserState","inviteeMail","min","updateUserData","InviteeStepTwo","inviteeName","registData","InviteeStepThree","RegistInvitee","Regist","Dialog","keepMounted","SideBarOfWorkSpaces","cursor","cardActionArea","WorkSpaceItem","userData","mb","CardActionArea","Card","fetchAsyncGetWorkspaces","workspaceSlice","workspaces","selectWorkspaces","workspacesArea","WorkSpaceList","getWorkspaces","my","flexDirection","WorkSpaces","fetchAsyncAddTask","body","task","fetchAsyncTasks","fetchAsyncProjectTasks","projectId","fetchAsyncTask","fetchAsyncUpdateTask","fetchAsyncRecentTasks","fetchAsyncNearDeadlineTasks","fetchAsyncMemberTasks","taskSlice","tasks","count","countTodaysTask","todaysTasks","startDateAt","endDateAt","progress","priority","todaysTask","selectedTask","recentTasks","nearDeadlineTasks","todaysDoneTasks","setTask","setSelectedTask","setTodaysDoneTasks","setQuery","info","selectTasks","selectTask","selectSelectedTask","selectRecentTasks","selectNearDeadlineTasks","selectTodaysDoneTasks","selectTaskQuery","avatar","TaskItem","iconType","data-testid","boxSizing","wrap","Chip","moment","format","BootstrapInput","withStyles","input","background","border","fontFamily","join","borderColor","InputBase","TaskList","taskData","text","setText","FormControl","Select","onChange","event","target","MenuItem","backdrop","zIndex","workSpaceIcon","VwDrawer","props","Backdrop","click","children","top","NewTaskAddAfterWorkDrawer","tasksData","getTasks","py","setSubmitting","paddingBottom","CheckboxWithLabel","Label","checked","e","idx","indexOf","checkedIcon","size","AddedTaskTextAfterWorkDrawer","fetchAsyncTodaysAttendance","fetchAsyncUpdateTodaysAttendance","attendance","fetchAsyncGetMyAttendances","year","month","fetchAsyncGetAttendance","fetchAsyncGetMemberAttendance","attendanceSlice","today","startedAt","endedAt","restStartedAt","restEndedAt","attendances","createdAt","comment","selectedAttendance","setSelectedAttendance","setAttendance","selectTodaysAttendance","selectAttenances","selectSelectedAttenances","selectAttendance","VWORK_LIGHT_BLUE","timeArea","dialogTitle","dialogText","additionalButton","todayUpdate","textField","out","Transition","forwardRef","ref","Slide","CheckAttendanceArea","require","todaysAttendance","attendedClicked","restStartedClicked","restEndClicked","confirm","CardContent","gutterBottom","utcOffset","CardActions","mr","disabled","fullScreen","TransitionComponent","length","rows","iconArea","contentWidth","ProjectItem","bgColor","iconNum","projectIcons","textAlign","fetchAsyncAllMyProjects","fetchAsyncGetProject","fetchAsyncCreateProject","projectData","fetchAsyncGetNewMembers","fetchAsyncGetProjectMember","fetchAsyncAddMembers","members","fetchAsyncGetMemberProjects","projectSlice","projects","newMembers","member","selectedMember","setSelectedMember","setProjectMember","selectProjects","selectProject","selectSelectedProjectMember","selectProjectMember","selectNewMembers","borderStyle","ProjectList","addIcon","StyledMenu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","MainHeader","logoutHandler","setAddIcon","AvatarIcon","setAvatarIcon","currentTarget","anchorEl","Boolean","fetchAsyncInviteMember","fetchAsyncUpdateUserProfile","bodyData","dashboardSlice","selectedMembers","setWorkspace","setSelectedMembers","selectSelectedMembers","dashboard","Home","getTodaysAttendance","TaskAddButton","taskQuery","startIcon","InputLabel","TASK_STATE","MyTask","setTaskQuery","MemberItem","memberId","MemberList","Members","DatePickerArea","Date","selectedDate","setSelectedDate","setMonth","getAttendance","utils","DateFnsUtils","locale","ja","DatePicker","openTo","views","date","querYear","queryMonth","updatedDate","toDate","minWidth","time","space","AttendanceItem","start","end","diff","Math","round","restStart","restEnd","totalDiff","hour","minutes","pt","pb","AttendanceList","MyAttendance","getAttendances","AddButtonInProject","ProjectMemberItem","AddMemberList","closeIcon","drawerTitle","NewAddProjectMemberDrawer","getNewMembers","ProjectMemberList","Project","useParams","getProject","setMembers","SideProjectItem","paddingTop","SideProjectList","MyProject","mx","SideBar","workspaceName","m","MainNavigation","form","submit","NewProjectDrawer","addProjectClicked","InviteMemberInAddIconDrawer","SetProfileInAvatarIconDrawer","profileClicked","formControl","selectEmpty","labelIcon","formContent","TASK_PRIORITY","TaskForm","submitFunction","toString","add","enableReinitialize","max","submitData","defaultValue","select","handleChange","inputProps","htmlFor","as","Slider","step","valueLabelDisplay","setFieldValue","TaskCardClickedDrawer","taskId","getTask","setAnchorEl","pathName","aria-controls","aria-haspopup","onClose","NewTaskAddDrawer","taskAddButton","CheckAttendanceAreaInDetail","KintaiCardClickedDrawer","profileTitle","profileItem","ProjectMemberClickedDrawer","MemberIconClicked","selectedProjectMember","getMember","flexGrow","tabs","MemberDetail","setValue","Tabs","newValue","indicatorColor","textColor","Tab","content","contentShift","Dashboard","fetchProject","fetchNearDeadlineTasks","fetchRecentTasks","hideProgressBar","autoClose","CssBaseline","logoIcon","backgroundImage","backgroundSize","backgroundRepeat","FormArea","buttonText","buttonPath","image","backgroundPosition","Signup","sm","md","Paper","square","Login","ForgotPassword","ResetPassword","DoneForgotPassword","Auth","handleClose","Snackbar","Alert","severity","SignUp","App","CircularProgress","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","fetchAsyncGetMembers","workspaceId","fetchAsyncGetMember","userSlice","store","configureStore","reducer","authReducer","appReducer","dashboardReducer","registReducer","projectReducer","taskReducer","workspaceReducer","attendanceReducer","memberReducer","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cea6a562.chunk.js","sourcesContent":["enum Color {\n  VWORK_WHITE = \"#FFFFFF\",\n  VWORK_RED = \"#F50357\",\n  VWORK_DARK_RED = \"#A81347\",\n  VWORK_BLUE = \"#1BC9F5\",\n  VWORK_DARK_BLUE = \"#0A88A8\",\n  VWORK_LIGHT_BLUE = \"#F0F7F8\",\n  VWORK_YELLOW = \"#F5E21B\",\n  VWORK_GRAY = \"#A7A7A7\",\n  VWORK_BLACK = \"#424242\",\n  VWORK_ORANGE = \"#E8AA14\",\n  VWORK_GREEN = \"#6EEB83\",\n}\n\nexport const PROJECT_COLORS = [\n  Color.VWORK_BLUE,\n  Color.VWORK_RED,\n  Color.VWORK_ORANGE,\n  Color.VWORK_GREEN,\n  Color.VWORK_DARK_BLUE,\n  Color.VWORK_DARK_RED,\n  Color.VWORK_YELLOW,\n];\n\nexport default Color;\n","import { createMuiTheme } from \"@material-ui/core\";\n\nimport Color from \"./color\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: Color.VWORK_RED,\n    },\n    secondary: {\n      main: Color.VWORK_DARK_BLUE,\n    },\n  },\n});\n","import React, { FC } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Color from \"../../../shared/util/color\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Container from \"@material-ui/core/Container\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      boxShadow: \"none\",\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    hide: {\n      display: \"none\",\n    },\n    menuIcon: {\n      fontSize: 40,\n      color: Color.VWORK_GRAY,\n    },\n    title: {\n      color: Color.VWORK_GRAY,\n    },\n  })\n);\n\ninterface MainHeaderOfAdminProps {\n  handleDrawerOpen: () => void;\n  open: boolean;\n}\n\nconst MainHeaderOfAdmin: FC<MainHeaderOfAdminProps> = ({\n  handleDrawerOpen,\n  open,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <AppBar\n          style={{ backgroundColor: Color.VWORK_WHITE }}\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(open && classes.hide)}\n            >\n              <MenuIcon className={classes.menuIcon} />\n            </IconButton>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Typography variant=\"h6\" className={classes.title} noWrap>\n                  ホーム\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Grid item>\n                  <IconButton>\n                    <Avatar\n                      alt=\"Shogo Yunoki\"\n                      src=\"/static/images/avatar/1.jpg\"\n                    />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </Container>\n    </div>\n  );\n};\n\nexport default MainHeaderOfAdmin;\n","import React, { FC } from \"react\";\nimport clsx from \"clsx\";\nimport { NavLink } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Color from \"../../util/color\";\nimport \"../../../App.css\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      color: Color.VWORK_BLACK,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      backgroundColor: Color.VWORK_DARK_BLUE,\n      color: Color.VWORK_WHITE,\n    },\n    title: {\n      fontWeight: 900,\n    },\n    mainTitle: {\n      paddingLeft: 3,\n      fontSize: 30,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },\n    menuIcon: {\n      fontSize: 40,\n      color: Color.VWORK_WHITE,\n    },\n    icon: {\n      color: Color.VWORK_WHITE,\n    },\n  })\n);\n\ninterface SideBarOfAdminProps {\n  handleDrawerClose: () => void;\n  open: boolean;\n}\n\nconst SideBarOfAdmin: FC<SideBarOfAdminProps> = ({\n  handleDrawerClose,\n  open,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Container maxWidth=\"md\">\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Box ml={2}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  className={classes.title}\n                >\n                  <Grid item>\n                    <img\n                      src={`${process.env.PUBLIC_URL}/images/logo192.png`}\n                      style={{ height: 25 }}\n                      className=\"imgstyle\"\n                      alt=\"アイコン\"\n                    />\n                  </Grid>\n                  <Grid item className={clsx(classes.mainTitle, \"logo\")}>\n                    VWORK\n                  </Grid>\n                </Grid>\n              </Box>\n            </Grid>\n            <Grid item>\n              <div className={classes.drawerHeader}>\n                <IconButton\n                  onClick={handleDrawerClose}\n                  style={{ paddingLeft: 0, paddingRight: 10 }}\n                >\n                  <MenuIcon className={classes.menuIcon} />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n          <List>\n            <ListItem button component={NavLink} to=\"/\" exact>\n              <ListItemIcon className={classes.icon}>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"ホーム\" />\n            </ListItem>\n            <ListItem button component={NavLink} to=\"/mytask\" exact>\n              <ListItemIcon className={classes.icon}>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"ワークスペース\" />\n            </ListItem>\n            <ListItem button component={NavLink} to=\"/work_manage\" exact>\n              <ListItemIcon className={classes.icon}>\n                <SupervisorAccountIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Users\" />\n            </ListItem>\n          </List>\n        </Drawer>\n      </Container>\n    </div>\n  );\n};\n\nexport default SideBarOfAdmin;\n","import React from \"react\";\nimport MainHeaderOfAdmin from \"./MainHeaderOfAdmin\";\nimport SideBarOfAdmin from \"./SideBarOfAdmin\";\n\nconst MainNavigationOfAdmin = () => {\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <MainHeaderOfAdmin handleDrawerOpen={handleDrawerOpen} open={open} />\n      <SideBarOfAdmin handleDrawerClose={handleDrawerClose} open={open} />\n    </>\n  );\n};\n\nexport default MainNavigationOfAdmin;\n","import React from \"react\";\nimport MainNavigationOfAdmin from \"../../shared/components/Navigation/MainNavigationOfAdmin\";\n\nconst Admin = () => {\n  return (\n    <>\n      <MainNavigationOfAdmin />\n    </>\n  );\n};\n\nexport default Admin;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\n// import NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Color from \"../../util/color\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      color: Color.VWORK_BLACK,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      backgroundColor: Color.VWORK_BLACK,\n      color: Color.VWORK_WHITE,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },\n    iconStyle: {\n      color: Color.VWORK_WHITE,\n    },\n    title: {\n      fontWeight: 900,\n    },\n    projectTitle: {\n      fontSize: 15,\n      marginTop: \"40%\",\n      marginLeft: \"5%\",\n      marginBottom: \"5%\",\n      width: 190,\n    },\n  })\n);\n\nconst SideBarOfRegistration = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <Drawer\n          open\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                className={classes.title}\n                style={{ marginLeft: \"10%\" }}\n              >\n                <Grid item style={{ fontSize: 30 }}>\n                  <img\n                    src={`${process.env.PUBLIC_URL}/images/logo192.png`}\n                    style={{ height: 25 }}\n                    alt=\"\"\n                  />\n                </Grid>\n                <Grid item style={{ fontSize: 30 }}>\n                  VWORK\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <div className={classes.drawerHeader}>\n                <IconButton>\n                  <MenuIcon style={{ fontSize: 40, color: Color.VWORK_GRAY }} />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n          <List>\n            <ListItem button component={NavLink} to=\"/\" exact>\n              <ListItemIcon className={classes.iconStyle}>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"ホーム\" />\n            </ListItem>\n            <ListItem button component={NavLink} to=\"/mytask\" exact>\n              <ListItemIcon className={classes.iconStyle}>\n                <CheckCircleOutlineIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"マイタスク\" />\n            </ListItem>\n            <ListItem button component={NavLink} to=\"/kintai_manage\" exact>\n              <ListItemIcon className={classes.iconStyle}>\n                <QueryBuilderIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"勤怠管理\" />\n            </ListItem>\n            {/*<ListItem button>*/}\n            {/*  <ListItemIcon className={classes.iconStyle}>*/}\n            {/*    <NotificationsNoneIcon />*/}\n            {/*  </ListItemIcon>*/}\n            {/*  <ListItemText primary=\"受信ボックス\" />*/}\n            {/*</ListItem>*/}\n          </List>\n          <Box borderBottom={1} className={classes.projectTitle}>\n            <Typography>マイプロジェクト</Typography>\n          </Box>\n        </Drawer>\n      </Container>\n    </div>\n  );\n};\n\nexport default SideBarOfRegistration;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Color from \"../../shared/util/color\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    span: {\n      color: Color.VWORK_RED,\n    },\n    button: {\n      position: \"absolute\",\n      fontSize: 30,\n\n      width: 200,\n      borderRadius: 15,\n      right: \"0%\",\n      bottom: \"0%\",\n      marginBottom: 40,\n      marginRight: 80,\n    },\n  })\n);\n\nconst Welcome = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <DialogTitle id=\"alert-dialog-slide-title\">\n        <Box mt={5}>\n          <Typography variant=\"h2\" component=\"h2\">\n            <span className={classes.span}>VWORK</span>\n            へようこそ\n          </Typography>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <Box mt={2}>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            これからVWORKを活用するための設定をして頂きます。\n            <br />\n            「NEXT」を押して次のステップへ進んで下さい。\n          </DialogContentText>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Link to=\"/regist/step/1\">\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            color=\"primary\"\n          >\n            NEXT\n          </Button>\n        </Link>\n      </DialogActions>\n    </>\n  );\n};\n\nexport default Welcome;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"../store\";\n\nconst apiUrl = process.env.REACT_APP_BACKEND_URL;\nconst token = localStorage.token;\nconst inviteeToken = localStorage.Itoken;\n\ninterface RegistType {\n  workspace: {\n    name: string;\n  };\n  user: {\n    name: string;\n    position: string;\n  };\n  project: {\n    name: string;\n    description: string;\n  };\n  invitations: {\n    name: string;\n    email: string;\n  }[];\n}\n\ninterface RegistInviteeType {\n  token: string;\n  user: {\n    name: string;\n    email: string;\n    position: string;\n    password: string;\n  };\n}\n\nexport const fetchAsyncRegistUser = createAsyncThunk(\n  \"regist/user\",\n  async (regist: RegistType) => {\n    const res = await axios.post(`${apiUrl}api/v1/registration`, regist, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncInvitation = createAsyncThunk(\n  \"regist/invitation\",\n  async (queryToken: string) => {\n    console.log(queryToken);\n    if (!queryToken) {\n      queryToken = inviteeToken;\n    }\n    const res = await axios.get(\n      `${apiUrl}api/v1/registration/invitee/${queryToken}`\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncRegistInvitee = createAsyncThunk(\n  \"regist/invitee\",\n  async (regist: RegistInviteeType) => {\n    const res = await axios.post(\n      `${apiUrl}api/v1/registration/invitee/`,\n      regist,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\ninterface RegistState {\n  regist: {\n    workspace: {\n      name: string;\n    };\n    user: {\n      name: string;\n      position: string;\n    };\n    project: {\n      name: string;\n      description: string;\n    };\n    invitations: {\n      name: string;\n      email: string;\n    }[];\n  };\n  invite: {\n    token: string;\n    workspace: string;\n    user: {\n      name: string;\n      email: string;\n      position: string;\n      password: string;\n      registration: boolean;\n    };\n  };\n}\n\nconst initialState: RegistState = {\n  regist: {\n    workspace: {\n      name: \"\",\n    },\n    user: {\n      name: \"\",\n      position: \"\",\n    },\n    project: {\n      name: \"\",\n      description: \"\",\n    },\n    invitations: [],\n  },\n  invite: {\n    token: \"\",\n    workspace: \"\",\n    user: {\n      name: \"\",\n      email: \"\",\n      position: \"\",\n      password: \"\",\n      registration: false,\n    },\n  },\n};\n\nconst registSlice = createSlice({\n  name: \"regist\",\n  initialState,\n  reducers: {\n    editWorkspace(state, action) {\n      state.regist.workspace.name = action.payload;\n    },\n    editUser(state, action) {\n      state.regist.user = action.payload;\n    },\n    editProject(state, action) {\n      state.regist.project = action.payload;\n    },\n    editInvitations(state, action) {\n      state.regist.invitations = action.payload;\n    },\n    editInviteToken(state, action) {\n      state.invite.token = action.payload;\n    },\n    editInviteUser(state, action) {\n      state.invite.user = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncRegistUser.fulfilled, (state, action) => {\n      window.location.href = \"/\";\n    });\n    builder.addCase(fetchAsyncRegistUser.rejected, (state, action) => {\n      window.location.href = \"/regist/step/1\";\n    });\n    builder.addCase(fetchAsyncInvitation.fulfilled, (state, action) => {\n      state.invite.workspace = action.payload.workspace;\n      state.invite.user = action.payload.data;\n    });\n    builder.addCase(fetchAsyncInvitation.rejected, (state, action) => {\n      window.location.href = \"/auth/signup\";\n    });\n    builder.addCase(fetchAsyncRegistInvitee.fulfilled, (state, action) => {\n      localStorage.setItem(\"token\", action.payload.token);\n      window.location.href = \"/\";\n    });\n    builder.addCase(fetchAsyncRegistInvitee.rejected, (state, action) => {\n      window.location.href = \"/regist/invitee/step1\";\n    });\n  },\n});\n\nexport const {\n  editWorkspace,\n  editInvitations,\n  editProject,\n  editUser,\n  editInviteToken,\n  editInviteUser,\n} = registSlice.actions;\n\nexport const selectRegist = (state: RootState) => state.regist.regist;\nexport const selectInviteUser = (state: RootState) => state.regist.invite.user;\nexport const selectInviteUserMail = (state: RootState) =>\n  state.regist.invite.user.email;\nexport const selectInviteUserName = (state: RootState) =>\n  state.regist.invite.user.name;\n\nexport default registSlice.reducer;\n","import React from \"react\";\nimport { Form, Field, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\n\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { editWorkspace } from \"../registSlice\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    button: {\n      position: \"absolute\",\n      fontSize: 30,\n      width: 200,\n      borderRadius: 15,\n      right: \"0%\",\n      bottom: \"0%\",\n      marginBottom: 40,\n      marginRight: 80,\n    },\n  })\n);\n\nfunction getSteps() {\n  return [\"基本設定\", \"個人設定\", \"メンバー招待\", \"プロジェクト設定\"];\n}\n\nconst StepOne = () => {\n  const classes = useStyles();\n  const steps = getSteps();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  return (\n    <>\n      <div className={classes.root}>\n        <Stepper\n          activeStep={Number(window.location.pathname.slice(-1)) - 1}\n          alternativeLabel\n        >\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </div>\n      <Formik\n        initialValues={{ workspace: \"\" }}\n        validationSchema={Yup.object().shape({\n          workspace: Yup.string().required(\"ワークスペース名は必須です。\"),\n        })}\n        onSubmit={(value) => {\n          dispatch(editWorkspace(value.workspace));\n          history.push(\"/regist/step/2\");\n        }}\n      >\n        <Form>\n          <Field\n            component={TextField}\n            name=\"workspace\"\n            label=\"ワークスペース名*\"\n            placeholder=\"会社名・チーム名\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"workspace\"\n          />\n          <DialogActions>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.button}\n              color=\"primary\"\n            >\n              NEXT\n            </Button>\n          </DialogActions>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default StepOne;\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { editUser } from \"../registSlice\";\nimport { Field, Form, Formik } from \"formik\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport { TextField } from \"formik-material-ui\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    button: {\n      position: \"absolute\",\n      fontSize: 30,\n      width: 200,\n      borderRadius: 15,\n      right: \"0%\",\n      bottom: \"0%\",\n      marginBottom: 40,\n      marginRight: 80,\n    },\n  })\n);\n\nfunction getSteps() {\n  return [\"基本設定\", \"個人設定\", \"メンバー招待\", \"プロジェクト設定\"];\n}\n\nconst StepTwo = () => {\n  const classes = useStyles();\n  const steps = getSteps();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Stepper\n          activeStep={Number(window.location.pathname.slice(-1)) - 1}\n          alternativeLabel\n        >\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </div>\n      <Formik\n        initialValues={{ name: \"\", position: \"\" }}\n        validationSchema={Yup.object().shape({\n          name: Yup.string().required(\"氏名は必須です。\"),\n          position: Yup.string().required(\"役職・担当は必須です。\"),\n        })}\n        onSubmit={(value) => {\n          // TODO: workspaceが空だったら最初からやり直し\n          // TODO: アラートを出してあげる「登録内容に不備があります」\n          dispatch(editUser(value));\n          history.push(\"/regist/step/3\");\n        }}\n      >\n        <Form>\n          <Field\n            component={TextField}\n            name=\"name\"\n            label=\"氏名*\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"name\"\n          />\n          <br />\n          <Field\n            component={TextField}\n            name=\"position\"\n            label=\"役職・担当\"\n            placeholder=\"経営企画\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"position\"\n          />\n          <DialogActions>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.button}\n              color=\"primary\"\n            >\n              NEXT\n            </Button>\n          </DialogActions>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default StepTwo;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as Yup from \"yup\";\nimport { editInvitations } from \"../registSlice\";\nimport { Field, Form, Formik, FieldArray } from \"formik\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport { TextField } from \"formik-material-ui\";\nimport { Box } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    button: {\n      position: \"absolute\",\n      fontSize: 30,\n      width: 200,\n      borderRadius: 15,\n      right: \"0%\",\n      bottom: \"0%\",\n      marginBottom: 40,\n      marginRight: 80,\n    },\n    formArea: {\n      overflowY: \"scroll\",\n      overflowX: \"hidden\",\n      height: \"33vh\",\n    },\n  })\n);\n\nfunction getSteps() {\n  return [\"基本設定\", \"個人設定\", \"メンバー招待\", \"プロジェクト設定\"];\n}\n\nconst StepThree = () => {\n  const classes = useStyles();\n  const steps = getSteps();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  return (\n    <>\n      <div className={classes.root}>\n        <Stepper\n          activeStep={Number(window.location.pathname.slice(-1)) - 1}\n          alternativeLabel\n        >\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </div>\n      <Formik\n        initialValues={{\n          invitations: [{ name: \"\", email: \"\" }],\n        }}\n        validationSchema={Yup.object().shape({\n          invitations: Yup.array().of(\n            Yup.object().shape({\n              email: Yup.string()\n                .email(\"有効なメールアドレスを入力してください。\")\n                .required(\"emailは必須です。\"),\n              name: Yup.string().required(\"氏名は必須です。\"),\n            })\n          ),\n        })}\n        onSubmit={(values) => {\n          // TODO: workspaceが空だったら最初からやり直し\n          // TODO: アラートを出してあげる「登録内容に不備があります」\n          dispatch(editInvitations(values.invitations));\n          history.push(\"/regist/step/4\");\n        }}\n      >\n        {({ values }) => (\n          <Form className={classes.formArea}>\n            <FieldArray\n              name=\"invitations\"\n              render={(arrayHelpers) => (\n                <div>\n                  {values.invitations.map((invitation, index) => (\n                    <div key={index}>\n                      <Grid container spacing={3}>\n                        <Grid item xs={5}>\n                          <Field\n                            component={TextField}\n                            label=\"氏名*\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id={`name.${index}`}\n                            name={`invitations[${index}].name`}\n                          />\n                        </Grid>\n                        <Grid item xs={5}>\n                          <Field\n                            component={TextField}\n                            type=\"email\"\n                            label=\"メールアドレス*\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id={`email.${index}`}\n                            name={`invitations[${index}].email`}\n                          />\n                        </Grid>\n                        <Grid item xs={1}>\n                          <Box display=\"flex\" alignItems=\"center\" height=\"100%\">\n                            <IconButton\n                              aria-label=\"delete\"\n                              onClick={() => arrayHelpers.remove(index)}\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </Box>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  ))}\n                  <br />\n                  <Button\n                    color=\"primary\"\n                    onClick={() => arrayHelpers.push({ name: \"\", email: \"\" })}\n                  >\n                    さらに追加\n                  </Button>\n                  <DialogActions>\n                    <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      className={classes.button}\n                      color=\"primary\"\n                    >\n                      NEXT\n                    </Button>\n                  </DialogActions>\n                </div>\n              )}\n            />\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default StepThree;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"./store\";\n\ninterface appState {\n  loading: boolean;\n  openMenu: boolean;\n  addProjectButton: boolean;\n  inviteMemberClicked: boolean;\n  setProfileClicked: boolean;\n  taskCardClicked: boolean;\n  addTaskButton: boolean;\n  kintaiCardClicked: boolean;\n  addButtonAfterTask: boolean;\n  addedTaskText: boolean;\n  addMemberButton: boolean;\n  memberIconClicked: boolean;\n}\n\nconst initialState: appState = {\n  loading: false,\n  openMenu: true,\n  addProjectButton: false,\n  inviteMemberClicked: false,\n  setProfileClicked: false,\n  taskCardClicked: false,\n  addTaskButton: false,\n  kintaiCardClicked: false,\n  addButtonAfterTask: false,\n  addedTaskText: false,\n  addMemberButton: false,\n  memberIconClicked: false,\n};\n\nconst appSlice = createSlice({\n  name: \"app\",\n  initialState,\n  reducers: {\n    toggleLoading(state, action) {\n      state.loading = action.payload;\n    },\n    toggleOpenMenu(state, action) {\n      state.openMenu = action.payload;\n    },\n    toggleAddProjectButton(state, action) {\n      state.addProjectButton = action.payload;\n    },\n    toggleInviteMemberClicked(state, action) {\n      state.inviteMemberClicked = action.payload;\n    },\n    toggleSetProfileClicked(state, action) {\n      state.setProfileClicked = action.payload;\n    },\n    toggleTaskCardClicked(state, action) {\n      state.taskCardClicked = action.payload;\n    },\n    toggleAddTaskButton(state, action) {\n      state.addTaskButton = action.payload;\n    },\n    toggleKintaiCardClicked(state, action) {\n      state.kintaiCardClicked = action.payload;\n    },\n    toggleAddButtonAfterTask(state, action) {\n      state.addButtonAfterTask = action.payload;\n    },\n    toggleAddedTaskText(state, action) {\n      state.addedTaskText = action.payload;\n    },\n    toggleAddMemberButton(state, action) {\n      state.addMemberButton = action.payload;\n    },\n    toggleMemberIconClicked(state, action) {\n      state.memberIconClicked = action.payload;\n    },\n  },\n});\n\nexport const {\n  toggleLoading,\n  toggleOpenMenu,\n  toggleAddProjectButton,\n  toggleInviteMemberClicked,\n  toggleSetProfileClicked,\n  toggleTaskCardClicked,\n  toggleAddTaskButton,\n  toggleKintaiCardClicked,\n  toggleAddButtonAfterTask,\n  toggleAddedTaskText,\n  toggleAddMemberButton,\n  toggleMemberIconClicked,\n} = appSlice.actions;\nexport const selectLoader = (state: RootState) => state.app.loading;\nexport const selectOpenMenu = (state: RootState) => state.app.openMenu;\nexport const selectAddProjectButton = (state: RootState) =>\n  state.app.addProjectButton;\nexport const selectInviteMemberClicked = (state: RootState) =>\n  state.app.inviteMemberClicked;\nexport const selectSetProfileClicked = (state: RootState) =>\n  state.app.setProfileClicked;\nexport const selectTaskCardClicked = (state: RootState) =>\n  state.app.taskCardClicked;\nexport const selectAddTaskButton = (state: RootState) =>\n  state.app.addTaskButton;\nexport const selectKintaiCardClicked = (state: RootState) =>\n  state.app.kintaiCardClicked;\nexport const selectAddButtonAfterTask = (state: RootState) =>\n  state.app.addButtonAfterTask;\nexport const selectAddedTaskText = (state: RootState) =>\n  state.app.addedTaskText;\nexport const selectAddMemberButton = (state: RootState) =>\n  state.app.addMemberButton;\nexport const selectMemberIconClicked = (state: RootState) =>\n  state.app.memberIconClicked;\n\nexport default appSlice.reducer;\n","import React from \"react\";\nimport * as Yup from \"yup\";\nimport { fetchAsyncRegistUser } from \"../registSlice\";\nimport { Field, Form, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { selectRegist } from \"../registSlice\";\n\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport { toggleLoading } from \"../../appSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    button: {\n      position: \"absolute\",\n      fontSize: 30,\n      width: 200,\n      borderRadius: 15,\n      right: \"0%\",\n      bottom: \"0%\",\n      marginBottom: 40,\n      marginRight: 80,\n    },\n    formArea: {\n      overflowY: \"scroll\",\n      overflowX: \"hidden\",\n      height: \"33vh\",\n    },\n  })\n);\n\nfunction getSteps() {\n  return [\"基本設定\", \"個人設定\", \"メンバー招待\", \"プロジェクト設定\"];\n}\n\nconst StepFour = () => {\n  const classes = useStyles();\n  const steps = getSteps();\n\n  const dispatch = useDispatch();\n\n  const regist = useSelector(selectRegist);\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Stepper\n          activeStep={Number(window.location.pathname.slice(-1)) - 1}\n          alternativeLabel\n        >\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </div>\n      <Formik\n        initialValues={{ name: \"\", description: \"\" }}\n        validationSchema={Yup.object().shape({\n          name: Yup.string().required(\"プロジェクト名は必須です。\"),\n          description: Yup.string().required(\"プロジェクト詳細は必須です。\"),\n        })}\n        onSubmit={async (value) => {\n          // TODO: workspaceが空だったら最初からやり直し\n          // TODO: アラートを出してあげる「登録内容に不備があります」\n          // TODO: ここの処理はredux側でやる\n          const updatedRegist = { ...regist };\n          updatedRegist.project = value;\n          dispatch(toggleLoading(true));\n          await dispatch(fetchAsyncRegistUser(updatedRegist));\n          dispatch(toggleLoading(false));\n        }}\n      >\n        <Form className={classes.formArea}>\n          <Field\n            component={TextField}\n            name=\"name\"\n            label=\"プロジェクト名*\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"name\"\n          />\n          <br />\n          <Field\n            component={TextField}\n            name=\"description\"\n            label=\"プロジェクト詳細\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            multiline\n            id=\"description\"\n          />\n          <DialogActions>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.button}\n              color=\"primary\"\n            >\n              登録\n            </Button>\n          </DialogActions>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default StepFour;\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport Color from \"../../shared/util/color\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    button: {\n      position: \"absolute\",\n      fontSize: 30,\n      width: 200,\n      borderRadius: 15,\n      right: \"0%\",\n      bottom: \"0%\",\n      marginBottom: 40,\n      marginRight: 80,\n    },\n  })\n);\n\nfunction getSteps() {\n  return [\"基本設定\", \"個人設定\", \"メンバー招待\", \"プロジェクト設定\"];\n}\n\nconst StepFinish = () => {\n  const classes = useStyles();\n  const steps = getSteps();\n\n  const history = useHistory();\n  const pageChangeHandler = () => {\n    history.push(\"/\");\n    history.go(0);\n  };\n  return (\n    <>\n      <div className={classes.root}>\n        <Stepper\n          activeStep={Number(window.location.pathname.slice(-1)) - 1}\n          alternativeLabel\n        >\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </div>\n      <Typography variant=\"h3\">\n        <span style={{ color: Color.VWORK_RED }}>VWORK</span>\n        の設定は完了しました。\n      </Typography>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          className={classes.button}\n          color=\"primary\"\n          onClick={pageChangeHandler}\n        >\n          NEXT\n        </Button>\n      </DialogActions>\n    </>\n  );\n};\n\nexport default StepFinish;\n","import React from \"react\";\n\nimport StepOne from \"../components/StepOne\";\nimport StepTwo from \"../components/StepTwo\";\nimport StepThree from \"../components/StepThree\";\nimport StepFour from \"../components/StepFour\";\nimport StepFinish from \"../components/StepFinish\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst RegistStep = () => {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/regist/step/1\" exact>\n          <StepOne />\n        </Route>\n        <Route path=\"/regist/step/2\" exact>\n          <StepTwo />\n        </Route>\n        <Route path=\"/regist/step/3\" exact>\n          <StepThree />\n        </Route>\n        <Route path=\"/regist/step/4\" exact>\n          <StepFour />\n        </Route>\n        <Route path=\"/regist/step/5\" exact>\n          <StepFinish />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default RegistStep;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"../store\";\n\nimport { toast } from \"react-toastify\";\n\nconst apiUrl = process.env.REACT_APP_BACKEND_URL;\nconst token = localStorage.token;\n\nexport const fetchAsyncLogin = createAsyncThunk(\n  \"auth/login\",\n  async (auth: { email: string; password: string }) => {\n    const res = await axios.post(`${apiUrl}api/v1/auth/login`, auth, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncSignup = createAsyncThunk(\n  \"auth/signup\",\n  async (auth: { email: string; password: string }) => {\n    const res = await axios.post(`${apiUrl}api/v1/auth/signup`, auth, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncCurrentUser = createAsyncThunk(\n  \"auth/current\",\n  async () => {\n    // これを各データの処理まえに呼び出す\n    const res = await axios.get(`${apiUrl}api/v1/auth/current`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncLogout = createAsyncThunk(\"auth/logout\", async () => {\n  const res = await axios.get(`${apiUrl}api/v1/auth/logout`);\n  return res.data;\n});\n\nexport const fetchAsyncUpdateUser = createAsyncThunk(\n  \"auth/updateUser\",\n  async (data: {\n    userId: string;\n    postData: { lastAccessWorkspace: string };\n  }) => {\n    const res = await axios.put(\n      `${apiUrl}api/v1/users/${data.userId}`,\n      data.postData,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncForgotPassword = createAsyncThunk(\n  \"auth/forgotPassword\",\n  async (email: string) => {\n    const res = await axios.post(\n      `${apiUrl}api/v1/auth/forgotpassword`,\n      { email },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncResetPassword = createAsyncThunk(\n  \"auth/resetPassword\",\n  async (auth: { resetToken: string; password: string }) => {\n    const res = await axios.put(\n      `${apiUrl}api/v1/auth/resetpassword/${auth.resetToken}`,\n      { password: auth.password },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\ninterface AuthState {\n  token: number | string;\n  user: {\n    _id: string;\n    name: string;\n    email: string;\n    registration: boolean;\n    role: string;\n    lastAccessWorkspace: string;\n  };\n  workspaceCount: number;\n  workspace: { id: string; name: string };\n  owner: boolean;\n  errorMessage: string;\n  errorOpen: boolean;\n  profile: { _id: string; position: string };\n}\n\nconst initialState: AuthState = {\n  token: \"\",\n  user: {\n    _id: \"\",\n    name: \"\",\n    email: \"\",\n    registration: false,\n    role: \"\",\n    lastAccessWorkspace: \"\",\n  },\n  workspaceCount: 0,\n  workspace: { id: \"\", name: \"\" },\n  owner: false,\n  errorMessage: \"\",\n  errorOpen: false,\n  profile: {\n    _id: \"\",\n    position: \"\",\n  },\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setErrorOpen(state, action) {\n      state.errorOpen = action.payload;\n    },\n    setUser(state, action) {\n      state.user = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncLogin.fulfilled, (state, action) => {\n      state.errorMessage = \"\";\n      localStorage.setItem(\"token\", action.payload.token);\n      if (action.payload.token) {\n        console.log(\"login success\");\n        action.payload.workspaceCount > 1\n          ? (window.location.href = \"/workspaces\")\n          : (window.location.href = \"/\");\n      }\n    });\n    builder.addCase(fetchAsyncLogin.rejected, (state, action) => {\n      let message = \"認証情報が間違っています。\";\n      state.errorMessage = message;\n      state.errorOpen = true;\n    });\n    builder.addCase(fetchAsyncCurrentUser.fulfilled, (state, action) => {\n      state.errorMessage = \"\";\n      state.token = localStorage.token;\n      state.user = action.payload.data;\n\n      state.profile = action.payload.profile;\n      state.workspace = action.payload.workspace;\n      state.owner = action.payload.owner;\n\n      state.workspaceCount = localStorage.wc;\n      localStorage.setItem(\n        \"workspace\",\n        action.payload.data.lastAccessWorkspace\n      );\n\n      const path = window.location.pathname;\n\n      if (!state.user.registration && !path.includes(\"/regist\")) {\n        window.location.href = \"/regist/welcome\";\n      } else {\n        if (path === \"/auth/login\" || path === \"/auth/signup\") {\n          window.location.href = \"/\";\n        }\n\n        //　登録済のユーザーは登録ステップの画面にランディングできない\n        if (\n          state.user.registration &&\n          path.includes(\"/regist\") &&\n          !path.includes(\"/invitee\")\n        ) {\n          window.location.href = \"/\";\n        }\n      }\n    });\n    builder.addCase(fetchAsyncCurrentUser.rejected, (state, action) => {\n      const path = window.location.pathname;\n      if (path !== \"/auth/login\" && path !== \"/auth/signup\") {\n        window.location.href = \"/auth/login\";\n      }\n    });\n    builder.addCase(fetchAsyncSignup.fulfilled, (state, action) => {\n      state.errorMessage = \"\";\n      localStorage.setItem(\"token\", action.payload.token);\n      if (action.payload.token) {\n        console.log(\"welcom\");\n        window.location.href = \"/regist/welcome\";\n      }\n    });\n    builder.addCase(fetchAsyncSignup.rejected, (state, action) => {\n      let message = \"登録に失敗しました。\";\n      state.errorMessage = message;\n      state.errorOpen = true;\n    });\n    builder.addCase(fetchAsyncLogout.fulfilled, (state, action) => {\n      localStorage.clear();\n      window.location.href = \"/auth/login\";\n    });\n    builder.addCase(fetchAsyncUpdateUser.fulfilled, (state, action) => {});\n    builder.addCase(fetchAsyncForgotPassword.fulfilled, (state, action) => {\n      window.location.href = \"/auth/forgot/complete\";\n    });\n    builder.addCase(fetchAsyncForgotPassword.rejected, (state, action) => {\n      toast.error(\"再設定の申請に失敗しました。\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    });\n    builder.addCase(fetchAsyncResetPassword.fulfilled, (state, action) => {\n      localStorage.setItem(\"token\", action.payload.token);\n      if (action.payload.token) {\n        console.log(\"login success\");\n        action.payload.workspaceCount > 1\n          ? (window.location.href = \"/workspaces\")\n          : (window.location.href = \"/\");\n      }\n    });\n  },\n});\n\nexport const selectUser = (state: RootState) => state.auth.user;\nexport const selectToken = (state: RootState) => state.auth.token;\nexport const selectProfile = (state: RootState) => state.auth.profile;\nexport const selectWorkspace = (state: RootState) =>\n  state.auth.user.lastAccessWorkspace;\nexport const selectUserRegistration = (state: RootState) =>\n  state.auth.user.registration;\nexport const selectWorkspaceName = (state: RootState) => state.auth.workspace;\nexport const selectErrorMessage = (state: RootState) => state.auth.errorMessage;\nexport const selectErrorOpen = (state: RootState) => state.auth.errorOpen;\n\nexport const { setErrorOpen, setUser } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Welcome from \"../components/Welcome\";\nimport RegistStep from \"./RegistStep\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchAsyncCurrentUser } from \"../../Auth/authSlice\";\n\nconst RegistUser = () => {\n  const dispatch = useDispatch();\n\n  const fetchUser = useCallback(async () => {\n    await dispatch(fetchAsyncCurrentUser());\n  }, [dispatch]);\n\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (mounted.current) {\n    } else {\n      fetchUser();\n      mounted.current = true;\n    }\n  }, [fetchUser]);\n\n  return (\n    <>\n      <Switch>\n        <Route path=\"/regist/welcome\">\n          <Welcome />\n        </Route>\n        <Route path=\"/regist/step\">\n          <RegistStep />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default RegistUser;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { fetchAsyncInvitation } from \"../registSlice\";\n\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Color from \"../../shared/util/color\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box } from \"@material-ui/core\";\nimport { toggleLoading } from \"../../appSlice\";\n\n// TODO: signup画面にリダイレクトされる\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      fontSize: 100,\n    },\n    button: {\n      position: \"absolute\",\n      fontSize: 30,\n\n      width: 200,\n      borderRadius: 15,\n      right: \"0%\",\n      bottom: \"0%\",\n      marginBottom: 40,\n      marginRight: 80,\n    },\n    style: {\n      marginTop: \"40%\",\n      marginRight: \"10%\",\n    },\n    dialog: {\n      position: \"relative\",\n    },\n  })\n);\n\nconst InviteeWelcome = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const getInvitation = useCallback(\n    async (query) => {\n      await dispatch(fetchAsyncInvitation(query));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    localStorage.clear();\n    const query = window.location.search.slice(1);\n    localStorage.setItem(\"Itoken\", query);\n    dispatch(toggleLoading(true));\n    getInvitation(query);\n    dispatch(toggleLoading(false));\n  }, [dispatch, getInvitation]);\n\n  return (\n    <>\n      <DialogTitle id=\"alert-dialog-slide-title\">\n        <Box mt={5}>\n          <Typography variant=\"h2\">\n            <span style={{ color: Color.VWORK_RED }}>VWORK</span>\n            へようこそ\n          </Typography>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <Box mt={2}>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            これからVWORKを活用するための設定をして頂きます。\n            <br />\n            「NEXT」を押して次のステップへ進んで下さい。\n          </DialogContentText>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Link to=\"/regist/invitee/step1\" style={{ textDecoration: \"none\" }}>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            color=\"primary\"\n          >\n            NEXT\n          </Button>\n        </Link>\n      </DialogActions>\n    </>\n  );\n};\n\nexport default InviteeWelcome;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Box } from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport {\n  editInviteUser,\n  selectInviteUser,\n  selectInviteUserMail,\n} from \"../registSlice\";\nimport { Field, Form, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      position: \"absolute\",\n      fontSize: 30,\n\n      width: 200,\n      borderRadius: 15,\n      right: \"0%\",\n      bottom: \"0%\",\n      marginBottom: 40,\n      marginRight: 80,\n    },\n  })\n);\n\nconst InviteeStepOne = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const inviteUserState = useSelector(selectInviteUser);\n\n  const inviteeMail = useSelector(selectInviteUserMail);\n\n  if (inviteUserState.registration) {\n    history.push(\"/regist/invitee/step2\");\n  }\n\n  return (\n    <>\n      <DialogTitle id=\"alert-dialog-slide-title\">\n        <Box mt={5}>\n          <Typography variant=\"h4\">基本設定</Typography>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\"></DialogContentText>\n      </DialogContent>\n      <Formik\n        initialValues={{ email: inviteeMail, password: \"\" }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email(\"有効なメールアドレスを入力してください。\")\n            .required(\"emailは必須です。\"),\n          password: Yup.string()\n            .min(6, \"6字以上入力してください\")\n            .required(\"パスワードは必須です。\"),\n        })}\n        onSubmit={(value) => {\n          const updateUserData = {\n            ...inviteUserState,\n            ...value,\n          };\n          dispatch(editInviteUser(updateUserData));\n          history.push(\"/regist/invitee/step2\");\n        }}\n      >\n        <Form>\n          <Field\n            component={TextField}\n            name=\"email\"\n            type=\"email\"\n            label=\"メールアドレス*\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"email\"\n            value={inviteeMail}\n          />\n          <br />\n          <Field\n            component={TextField}\n            type=\"password\"\n            label=\"パスワード*\"\n            fullWidth\n            variant=\"outlined\"\n            margin=\"normal\"\n            name=\"password\"\n            id=\"password\"\n          />\n          <DialogActions>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.button}\n              color=\"primary\"\n            >\n              NEXT\n            </Button>\n          </DialogActions>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default InviteeStepOne;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Box } from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport {\n  fetchAsyncRegistInvitee,\n  selectInviteUser,\n  selectInviteUserName,\n} from \"../registSlice\";\nimport { Field, Form, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleLoading } from \"../../appSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      position: \"absolute\",\n      fontSize: 30,\n\n      width: 200,\n      borderRadius: 15,\n      right: \"0%\",\n      bottom: \"0%\",\n      marginBottom: 40,\n      marginRight: 80,\n    },\n  })\n);\n\nconst InviteeStepTwo = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const inviteUserState = useSelector(selectInviteUser);\n  const inviteeName = useSelector(selectInviteUserName);\n\n  const token = localStorage.Itoken;\n\n  return (\n    <>\n      <DialogTitle id=\"alert-dialog-slide-title\">\n        <Box mt={5}>\n          <Typography variant=\"h4\">プロフィール設定</Typography>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\"></DialogContentText>\n      </DialogContent>\n      <Formik\n        initialValues={{ name: inviteeName, position: \"\" }}\n        validationSchema={Yup.object().shape({\n          name: Yup.string().required(\"氏名は必須です。\"),\n        })}\n        onSubmit={async (value) => {\n          const user = {\n            ...inviteUserState,\n            ...value,\n          };\n          const registData = {\n            token,\n            user,\n          };\n          dispatch(toggleLoading(true));\n          await dispatch(fetchAsyncRegistInvitee(registData));\n          dispatch(toggleLoading(false));\n        }}\n      >\n        <Form>\n          <Field\n            component={TextField}\n            name=\"name\"\n            label=\"氏名*\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"name\"\n            value={inviteeName}\n          />\n          <br />\n          <Field\n            component={TextField}\n            name=\"position\"\n            label=\"役職・担当\"\n            placeholder=\"経営企画\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"position\"\n          />\n          <DialogActions>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.button}\n              color=\"primary\"\n            >\n              登録\n            </Button>\n          </DialogActions>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default InviteeStepTwo;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Color from \"../../shared/util/color\";\nimport { useHistory } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      position: \"absolute\",\n    },\n    button: {\n      position: \"absolute\",\n      fontSize: 30,\n\n      width: 200,\n      borderRadius: 15,\n      right: \"0%\",\n      bottom: \"0%\",\n      marginBottom: 40,\n      marginRight: 80,\n    },\n  })\n);\n\nconst InviteeStepThree = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const pageChangeHandler = () => {\n    history.push(\"/\");\n    history.go(0);\n  };\n  return (\n    <div>\n      <DialogTitle id=\"alert-dialog-slide-title\">\n        <Box mt={25} ml={10}>\n          <Typography variant=\"h3\" className={classes.title}>\n            <span style={{ color: Color.VWORK_RED }}>VWORK</span>\n            の設定は完了しました。\n          </Typography>\n        </Box>\n      </DialogTitle>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          className={classes.button}\n          color=\"primary\"\n          onClick={pageChangeHandler}\n        >\n          NEXT\n        </Button>\n      </DialogActions>\n    </div>\n  );\n};\n\nexport default InviteeStepThree;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport InviteeWelcome from \"../components/InviteeWelcome\";\nimport InviteeStepOne from \"../components/InviteeStepOne\";\nimport InviteeStepTwo from \"../components/InviteeStepTwo\";\nimport InviteeStepThree from \"../components/InviteeStepThree\";\n\nconst RegistInvitee = () => {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/regist/invitee/welcome\">\n          <InviteeWelcome />\n        </Route>\n        <Route path=\"/regist/invitee/step1\" exact>\n          <InviteeStepOne />\n        </Route>\n        <Route path=\"/regist/invitee/step2\" exact>\n          <InviteeStepTwo />\n        </Route>\n        <Route path=\"/regist/invitee/step3\" exact>\n          <InviteeStepThree />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default RegistInvitee;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SideBarOfRegistration from \"../../shared/components/Navigation/SideBarOfRegistration\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Container from \"@material-ui/core/Container\";\nimport RegistUser from \"./RegistUser\";\nimport RegistInvitee from \"./RegistInvitee\";\n\nimport \"./Regist.css\";\n\nconst Regist = () => {\n  return (\n    <>\n      <SideBarOfRegistration />\n      <Dialog open keepMounted maxWidth=\"xl\" className=\"registDialog\">\n        <Container maxWidth=\"md\">\n          <Router>\n            <Switch>\n              <Route path=\"/regist/invitee\">\n                <RegistInvitee />\n              </Route>\n              <Route path=\"/regist\">\n                <RegistUser />\n              </Route>\n            </Switch>\n          </Router>\n        </Container>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Regist;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { NavLink } from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\n// import NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Color from \"../../util/color\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      color: Color.VWORK_BLACK,\n    },\n    mainTitle: {\n      paddingLeft: 3,\n      fontSize: 30,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      backgroundColor: Color.VWORK_BLACK,\n      color: Color.VWORK_WHITE,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },\n    iconStyle: {\n      color: Color.VWORK_WHITE,\n    },\n    title: {\n      fontWeight: 900,\n    },\n    projectTitle: {\n      fontSize: 15,\n      marginTop: \"40%\",\n      marginLeft: \"5%\",\n      marginBottom: \"5%\",\n      width: 190,\n    },\n  })\n);\n\nconst SideBarOfWorkSpaces = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <Drawer\n          open\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                className={classes.title}\n                style={{ marginLeft: \"10%\" }}\n              >\n                <Grid item style={{ fontSize: 30 }}>\n                  <img\n                    src={`${process.env.PUBLIC_URL}/images/logo192.png`}\n                    style={{ height: 25 }}\n                    alt=\"\"\n                  />\n                </Grid>\n                <Grid item className={clsx(classes.mainTitle, \"logo\")}>\n                  VWORK\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <div className={classes.drawerHeader}>\n                <IconButton>\n                  <MenuIcon style={{ fontSize: 40, color: Color.VWORK_GRAY }} />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n          <List>\n            <ListItem button component={NavLink} to=\"/\" exact>\n              <ListItemIcon className={classes.iconStyle}>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"ホーム\" />\n            </ListItem>\n            <ListItem button component={NavLink} to=\"/mytask\" exact>\n              <ListItemIcon className={classes.iconStyle}>\n                <CheckCircleOutlineIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"マイタスク\" />\n            </ListItem>\n            <ListItem button component={NavLink} to=\"/kintai_manage\" exact>\n              <ListItemIcon className={classes.iconStyle}>\n                <QueryBuilderIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"勤怠管理\" />\n            </ListItem>\n            {/*<ListItem button>*/}\n            {/*  <ListItemIcon className={classes.iconStyle}>*/}\n            {/*    <NotificationsNoneIcon />*/}\n            {/*  </ListItemIcon>*/}\n            {/*  <ListItemText primary=\"受信ボックス\" />*/}\n            {/*</ListItem>*/}\n          </List>\n          <Box borderBottom={1} className={classes.projectTitle}>\n            <Typography>マイプロジェクト</Typography>\n          </Box>\n        </Drawer>\n      </Container>\n    </div>\n  );\n};\n\nexport default SideBarOfWorkSpaces;\n","import React, { FC } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchAsyncUpdateUser, selectUser } from \"../../Auth/authSlice\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      borderRadius: 10,\n      height: 80,\n      marginBottom: 15,\n      cursor: \"pointer\",\n    },\n    title: {\n      fontSize: 20,\n      paddingLeft: 10,\n    },\n    cardActionArea: {\n      height: 80,\n    },\n  })\n);\n\ninterface WorkSpaceItemProps {\n  id: string;\n  name: string;\n}\n\nconst WorkSpaceItem: FC<WorkSpaceItemProps> = ({ id, name }) => {\n  const classes = useStyles();\n\n  const userData = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  return (\n    <Box width=\"100%\" mb={3}>\n      <CardActionArea\n        className={classes.cardActionArea}\n        onClick={async () => {\n          await dispatch(\n            fetchAsyncUpdateUser({\n              userId: userData._id,\n              postData: { lastAccessWorkspace: id },\n            })\n          );\n          window.location.href = \"/\";\n        }}\n      >\n        <Card className={classes.root}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style={{ height: 80, margin: \"auto\" }}\n          >\n            <Grid item>\n              <Typography className={classes.title}>{name}</Typography>\n            </Grid>\n          </Grid>\n        </Card>\n      </CardActionArea>\n    </Box>\n  );\n};\n\nexport default WorkSpaceItem;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"../store\";\n\nconst apiUrl = process.env.REACT_APP_BACKEND_URL;\nconst token = localStorage.token;\n\nexport const fetchAsyncGetWorkspaces = createAsyncThunk(\n  \"workspace/all\",\n  async () => {\n    const res = await axios.get(`${apiUrl}api/v1/workspaces/`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res.data;\n  }\n);\n\ninterface workspaceState {\n  workspaces: { _id: string; name: string }[];\n}\n\nconst initialState: workspaceState = {\n  workspaces: [],\n};\n\nconst workspaceSlice = createSlice({\n  name: \"workspaces\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncGetWorkspaces.fulfilled, (state, action) => {\n      state.workspaces = action.payload.data;\n    });\n  },\n});\n\nexport const selectWorkspaces = (state: RootState) =>\n  state.workspace.workspaces;\n\nexport default workspaceSlice.reducer;\n","import React, { useCallback, useEffect } from \"react\";\n\nimport WorkSpaceItem from \"./WorkSpaceItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAsyncGetWorkspaces, selectWorkspaces } from \"../workspaceSlice\";\n\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      fontSize: 20,\n      paddingLeft: 10,\n    },\n    workspacesArea: {\n      height: \"42vh\",\n      overflowY: \"scroll\",\n      overflowX: \"hidden\",\n    },\n  })\n);\n\nconst WorkSpaceList = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const getWorkspaces = useCallback(async () => {\n    await dispatch(fetchAsyncGetWorkspaces());\n  }, [dispatch]);\n\n  useEffect(() => {\n    getWorkspaces();\n  }, [getWorkspaces]);\n\n  const workspaces = useSelector(selectWorkspaces);\n\n  return (\n    <>\n      <Box borderBottom={1} className={classes.title} my={5}>\n        WORKSPACE一覧\n      </Box>\n      <Box flexDirection=\"column\" className={classes.workspacesArea}>\n        {workspaces.map((workspace, index) => (\n          <WorkSpaceItem name={workspace.name} id={workspace._id} key={index} />\n        ))}\n      </Box>\n    </>\n  );\n};\n\nexport default WorkSpaceList;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport SideBarOfWorkSpaces from \"../../shared/components/Navigation/SideBarOfWorkSpaces\";\nimport WorkSpaceList from \"../components/WorkSpaceList\";\nimport { fetchAsyncCurrentUser } from \"../../Auth/authSlice\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Container from \"@material-ui/core/Container\";\n\nconst WorkSpaces = () => {\n  const dispatch = useDispatch();\n\n  const fetchUser = useCallback(async () => {\n    await dispatch(fetchAsyncCurrentUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchUser();\n  }, [fetchUser]);\n  return (\n    <>\n      <SideBarOfWorkSpaces />\n      <Dialog open keepMounted maxWidth=\"xl\" className=\"registDialog\">\n        <Container maxWidth=\"md\">\n          <WorkSpaceList />\n        </Container>\n      </Dialog>\n    </>\n  );\n};\n\nexport default WorkSpaces;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"../../store\";\n\nimport { toast } from \"react-toastify\";\n\nconst apiUrl = process.env.REACT_APP_BACKEND_URL;\nconst token = localStorage.token;\n\nexport const fetchAsyncAddTask = createAsyncThunk(\n  \"task/add\",\n  async (body: {\n    task: {\n      user: string;\n      name: string;\n      description: string;\n      startDateAt: string;\n      endDateAt: string;\n      state: number;\n      progress: number;\n      priority: number;\n      project: string | null;\n      todaysTask: boolean;\n    };\n    workspace: string;\n  }) => {\n    const res = await axios.post(\n      `${apiUrl}api/v1/workspaces/${body.workspace}/tasks`,\n      body.task,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncTasks = createAsyncThunk(\n  \"task/getAll\",\n  async (data: { workspace: string; query?: string }) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${data.workspace}/tasks${\n        data.query ? `?state=${data.query}` : \"\"\n      }`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncProjectTasks = createAsyncThunk(\n  \"task/getProjectTask\",\n  async (projectId: string) => {\n    const res = await axios.get(`${apiUrl}api/v1/projects/${projectId}/tasks`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncTask = createAsyncThunk(\n  \"task/get\",\n  async (id: string) => {\n    const res = await axios.get(`${apiUrl}api/v1/tasks/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncUpdateTask = createAsyncThunk(\n  \"task/update\",\n  async (data: {\n    id: string;\n    task: {\n      user: string;\n      name: string;\n      description: string;\n      startDateAt: string;\n      endDateAt: string;\n      state: number;\n      progress: number;\n      priority: number;\n      project: string | null;\n      todaysTask: boolean;\n    };\n  }) => {\n    const res = await axios.put(`${apiUrl}api/v1/tasks/${data.id}`, data.task, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncRecentTasks = createAsyncThunk(\n  \"task/getRecent\",\n  async (workspace: string) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${workspace}/tasks/recent`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncNearDeadlineTasks = createAsyncThunk(\n  \"task/getNearDeadline\",\n  async (workspace: string) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${workspace}/tasks/near_deadline`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\n// ユーザー管理のユーザーに紐づくタスク一覧\nexport const fetchAsyncMemberTasks = createAsyncThunk(\n  \"task/member\",\n  async (data: { workspace: string; userId: string }) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${data.workspace}/users/${data.userId}/tasks`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\ninterface taskState {\n  tasks: {\n    _id: string;\n    count: number;\n    countTodaysTask: number;\n    data: {\n      name: string;\n      project: { _id: string; name: string };\n      endDateAt: string;\n      _id: string;\n      user: { _id: string; name: string };\n    }[];\n    todaysTasks: {\n      name: string;\n      project: { _id: string; name: string };\n      endDateAt: string;\n      _id: string;\n      user: { _id: string; name: string };\n    }[];\n  };\n  task: {\n    user: string;\n    name: string;\n    description: string;\n    startDateAt: string;\n    endDateAt: string;\n    state: number;\n    progress: number;\n    priority: number;\n    project: string | null;\n    todaysTask: boolean;\n  };\n  selectedTask: string;\n  recentTasks: {\n    name: string;\n    project: { _id: string; name: string };\n    endDateAt: string;\n    _id: string;\n    user: { _id: string; name: string };\n  }[];\n  nearDeadlineTasks: {\n    name: string;\n    project: { _id: string; name: string };\n    endDateAt: string;\n    _id: string;\n    user: { _id: string; name: string };\n  }[];\n  todaysDoneTasks: string[];\n  query: string;\n}\n\nconst initialState: taskState = {\n  tasks: {\n    _id: \"\",\n    count: 0,\n    countTodaysTask: 0,\n    data: [],\n    todaysTasks: [],\n  },\n  task: {\n    user: \"\",\n    name: \"\",\n    description: \"\",\n    startDateAt: \"\",\n    endDateAt: \"\",\n    state: 0,\n    progress: 0,\n    priority: 0,\n    project: \"\",\n    todaysTask: false,\n  },\n  selectedTask: \"\",\n  recentTasks: [],\n  nearDeadlineTasks: [],\n  todaysDoneTasks: [],\n  query: \"\",\n};\n\nconst taskSlice = createSlice({\n  name: \"task\",\n  initialState,\n  reducers: {\n    setTask(state, action) {\n      state.task = action.payload;\n    },\n    setSelectedTask(state, action) {\n      state.selectedTask = action.payload;\n    },\n    setTodaysDoneTasks(state, action) {\n      state.todaysDoneTasks = action.payload;\n    },\n    setQuery(state, action) {\n      state.query = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncAddTask.fulfilled, (state, action) => {\n      toast.info(\"タスクを追加しました。\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    });\n    builder.addCase(fetchAsyncUpdateTask.fulfilled, (state, action) => {\n      toast.info(\"タスクを更新しました。\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    });\n    builder.addCase(fetchAsyncTasks.fulfilled, (state, action) => {\n      state.tasks = action.payload;\n    });\n    builder.addCase(fetchAsyncProjectTasks.fulfilled, (state, action) => {\n      state.tasks = action.payload;\n    });\n    builder.addCase(fetchAsyncTask.fulfilled, (state, action) => {\n      state.task = action.payload.data;\n    });\n    builder.addCase(fetchAsyncRecentTasks.fulfilled, (state, action) => {\n      state.recentTasks = action.payload.data;\n    });\n    builder.addCase(fetchAsyncNearDeadlineTasks.fulfilled, (state, action) => {\n      state.nearDeadlineTasks = action.payload.data;\n    });\n    builder.addCase(fetchAsyncMemberTasks.fulfilled, (state, action) => {\n      console.log(action.payload);\n    });\n  },\n});\n\nexport const selectTasks = (state: RootState) => state.task.tasks;\nexport const selectTask = (state: RootState) => state.task.task;\nexport const selectSelectedTask = (state: RootState) => state.task.selectedTask;\nexport const selectRecentTasks = (state: RootState) => state.task.recentTasks;\nexport const selectNearDeadlineTasks = (state: RootState) =>\n  state.task.nearDeadlineTasks;\nexport const selectTodaysDoneTasks = (state: RootState) =>\n  state.task.todaysDoneTasks;\nexport const selectTaskQuery = (state: RootState) => state.task.query;\n\nexport const {\n  setSelectedTask,\n  setTodaysDoneTasks,\n  setTask,\n  setQuery,\n} = taskSlice.actions;\n\nexport default taskSlice.reducer;\n","import React, { FC } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport moment from \"moment\";\n\nimport { toggleTaskCardClicked } from \"../../../appSlice\";\nimport { setSelectedTask } from \"../taskSlice\";\nimport Color from \"../../../shared/util/color\";\n\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      borderRadius: 10,\n      height: 80,\n      marginBottom: 15,\n      cursor: \"pointer\",\n    },\n    cardActionArea: {\n      height: 80,\n    },\n    avatar: {\n      backgroundColor: Color.VWORK_RED,\n    },\n  })\n);\n\ninterface TaskItemProps {\n  data: {\n    name: string;\n    project: { _id: string; name: string };\n    endDateAt: string;\n    _id: string;\n    user: { _id: string; name: string };\n  };\n  iconType?: string;\n}\n\nconst TaskItem: FC<TaskItemProps> = ({ iconType = \"\", data }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardActionArea\n          className={classes.cardActionArea}\n          onClick={() => {\n            dispatch(setSelectedTask(data._id));\n            dispatch(toggleTaskCardClicked(true));\n          }}\n          data-testid=\"test\"\n        >\n          <Grid\n            container\n            alignItems=\"center\"\n            style={{ height: 80, padding: \"10px\", boxSizing: \"border-box\" }}\n            spacing={2}\n          >\n            <Grid item xs={6}>\n              <Grid\n                container\n                wrap=\"nowrap\"\n                direction=\"row\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Grid item>\n                  {iconType === \"alert\" ? (\n                    <ErrorOutlineIcon color=\"primary\" />\n                  ) : (\n                    <CheckCircleIcon color=\"secondary\" />\n                  )}\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body1\">{data.name}</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item container xs alignItems=\"center\">\n              <Grid item>\n                {data.project && data.project.name ? (\n                  <Chip\n                    label={data.project.name}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                  />\n                ) : (\n                  <Chip label=\"プロジェクト未選択\" variant=\"outlined\" />\n                )}\n              </Grid>\n            </Grid>\n            <Grid item container xs alignItems=\"center\" spacing={1}>\n              <Grid item>\n                <AccessTimeIcon color=\"disabled\" />\n              </Grid>\n              <Grid item>\n                <Typography>\n                  {data.endDateAt\n                    ? moment(data.endDateAt).format(\"YYYY/MM/DD\")\n                    : \"\"}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item xs={1}>\n              {data.user.name ? (\n                <Avatar className={classes.avatar}>\n                  {data.user.name.slice(0, 1)}\n                </Avatar>\n              ) : (\n                <Avatar>V</Avatar>\n              )}\n            </Grid>\n          </Grid>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nexport default TaskItem;\n","import React, { FC } from \"react\";\n\nimport TaskItem from \"./TaskItem\";\n\nimport Box from \"@material-ui/core/Box\";\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      fontSize: 23,\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n  })\n);\n\nconst BootstrapInput = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      borderRadius: 4,\n      position: \"relative\",\n      backgroundColor: theme.palette.background.paper,\n      border: \"1px solid #ced4da\",\n      fontSize: 16,\n      padding: \"10px 26px 10px 12px\",\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n      \"&:focus\": {\n        borderRadius: 4,\n        borderColor: \"#80bdff\",\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n      },\n    },\n  })\n)(InputBase);\n\ninterface TaskListProps {\n  title?: string;\n  iconType?: string;\n  taskData?: {\n    name: string;\n    project: { _id: string; name: string };\n    endDateAt: string;\n    _id: string;\n    user: { _id: string; name: string };\n  }[];\n}\n\nconst TaskList: FC<TaskListProps> = ({\n  title = \"\",\n  iconType = \"\",\n  taskData,\n}) => {\n  const classes = useStyles();\n  const [text, setText] = React.useState(\"\");\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setText(event.target.value as string);\n  };\n\n  // TODO:　全てのTaskListを使っているところとAPIを連携させたらここを削除\n  const tasks: {\n    name: string;\n    project: { _id: string; name: string };\n    endDateAt: string;\n    _id: string;\n    user: { _id: string; name: string };\n  }[] = taskData\n    ? taskData\n    : [\n        {\n          name: \"タスク\",\n          project: { name: \"プロジェクト\", _id: \"12345\" },\n          endDateAt: \"2020-10-10\",\n          _id: \"12345\",\n          user: { name: \"太郎\", _id: \"12345\" },\n        },\n      ];\n\n  return (\n    <>\n      <Box mt={7}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={5}>\n            {title ? (\n              <Box borderBottom={1} className={classes.title}>\n                {title}\n              </Box>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n          <Grid item>\n            {title === \"タスク\" ? (\n              <FormControl className={classes.margin}>\n                <Select\n                  value={text}\n                  onChange={handleChange}\n                  input={<BootstrapInput />}\n                  style={{ width: 200 }}\n                >\n                  <MenuItem value=\"\">未選択</MenuItem>\n                  <MenuItem value=\"0\">TODO</MenuItem>\n                  <MenuItem value=\"1\">進行中</MenuItem>\n                  <MenuItem value=\"2\">完了</MenuItem>\n                </Select>\n              </FormControl>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n        </Grid>\n        <Box mt={2}>\n          <Grid container direction=\"column\" justify=\"flex-start\">\n            {tasks.map((data, index) => {\n              return <TaskItem data={data} iconType={iconType} key={index} />;\n            })}\n          </Grid>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default TaskList;\n","import React, { FC } from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst DrawerWith = \"50%\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer,\n      color: \"#fff\",\n    },\n    drawer: {\n      width: DrawerWith,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: DrawerWith,\n    },\n    workSpaceIcon: {\n      marginTop: 10,\n    },\n  })\n);\n\ninterface VwDrawerProps {\n  open: boolean;\n  click: () => void;\n}\n\nconst VwDrawer: FC<VwDrawerProps> = (props) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Backdrop\n        className={classes.backdrop}\n        open={props.open}\n        onClick={props.click}\n      />\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={props.open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        {props.children}\n      </Drawer>\n    </>\n  );\n};\n\nexport default VwDrawer;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VwDrawer from \"../../../shared/components/Common/VwDrawer\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\nimport {\n  selectAddButtonAfterTask,\n  toggleAddButtonAfterTask,\n} from \"../../../appSlice\";\nimport { selectWorkspace } from \"../../../Auth/authSlice\";\nimport { fetchAsyncTasks, selectTasks, setTodaysDoneTasks } from \"../taskSlice\";\nimport * as Yup from \"yup\";\nimport { Field, Form, Formik, FieldArray } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { CheckboxWithLabel } from \"formik-material-ui\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      position: \"absolute\",\n      top: 25,\n      right: 50,\n    },\n  })\n);\n// TODO: mapけい直す\nconst NewTaskAddAfterWorkDrawer = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const addButtonAfterTask = useSelector(selectAddButtonAfterTask);\n\n  const tasksData = useSelector(selectTasks);\n  const workspace = useSelector(selectWorkspace);\n\n  const getTasks = useCallback(\n    async (workspace) => {\n      await dispatch(fetchAsyncTasks({ workspace }));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    getTasks(workspace);\n  }, [getTasks, workspace]);\n\n  interface TaskFormValues {\n    tasks: string[];\n  }\n\n  const initialValues: TaskFormValues = {\n    tasks: [],\n  };\n  return (\n    <>\n      <VwDrawer\n        open={addButtonAfterTask}\n        click={() => dispatch(toggleAddButtonAfterTask(false))}\n      >\n        <Container maxWidth=\"md\">\n          <Box py={4}>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={Yup.object().shape({})}\n              onSubmit={(values, actions) => {\n                actions.setSubmitting(false);\n                dispatch(setTodaysDoneTasks(values.tasks));\n              }}\n            >\n              {({ values }) => (\n                <Form>\n                  <FieldArray\n                    name=\"tasks\"\n                    render={(arrayHelpers) => (\n                      <div>\n                        <Box\n                          borderBottom={1}\n                          width=\"80%\"\n                          paddingBottom={1}\n                          marginBottom={2}\n                        >\n                          <Typography variant=\"h5\" component=\"h5\">\n                            今日のタスク\n                          </Typography>\n                        </Box>\n                        {tasksData.todaysTasks &&\n                          tasksData.todaysTasks.map((todaysTask, index) => (\n                            <div key={`todaysTask-${index}`}>\n                              <Field\n                                component={CheckboxWithLabel}\n                                Label={{ label: todaysTask.name }}\n                                name=\"tasks\"\n                                type=\"checkbox\"\n                                value={todaysTask._id}\n                                checked={values.tasks.includes(todaysTask._id)}\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  if (e.target.checked) {\n                                    arrayHelpers.push(todaysTask._id);\n                                  } else {\n                                    const idx = values.tasks.indexOf(\n                                      todaysTask._id\n                                    );\n                                    arrayHelpers.remove(idx);\n                                  }\n                                }}\n                                icon={<RadioButtonUncheckedIcon />}\n                                checkedIcon={<RadioButtonCheckedIcon />}\n                              />\n                            </div>\n                          ))}\n                        <br />\n                        <Box\n                          borderBottom={1}\n                          width=\"80%\"\n                          paddingBottom={1}\n                          marginBottom={2}\n                        >\n                          <Typography variant=\"h5\" component=\"h5\">\n                            タスク一覧\n                          </Typography>\n                        </Box>\n                        {tasksData.data &&\n                          tasksData.data.map((task, index) => (\n                            <div key={`task-${index}`}>\n                              <Field\n                                component={CheckboxWithLabel}\n                                Label={{ label: task.name }}\n                                name=\"tasks\"\n                                type=\"checkbox\"\n                                value={task._id}\n                                checked={values.tasks.includes(task._id)}\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  if (e.target.checked) {\n                                    arrayHelpers.push(task._id);\n                                  } else {\n                                    const idx = values.tasks.indexOf(task._id);\n                                    arrayHelpers.remove(idx);\n                                  }\n                                }}\n                                icon={<RadioButtonUncheckedIcon />}\n                                checkedIcon={<RadioButtonCheckedIcon />}\n                              />\n                            </div>\n                          ))}\n                        <br />\n                        <DialogActions>\n                          <Button\n                            type=\"submit\"\n                            className={classes.button}\n                            size=\"large\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                          >\n                            追加\n                          </Button>\n                        </DialogActions>\n                      </div>\n                    )}\n                  />\n                </Form>\n              )}\n            </Formik>\n          </Box>\n        </Container>\n      </VwDrawer>\n    </>\n  );\n};\n\nexport default NewTaskAddAfterWorkDrawer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport VwDrawer from \"../../../shared/components/Common/VwDrawer\";\nimport { selectAddedTaskText, toggleAddedTaskText } from \"../../../appSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      fontSize: 23,\n    },\n  })\n);\n\nconst AddedTaskTextAfterWorkDrawer = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const addedTaskText = useSelector(selectAddedTaskText);\n  return (\n    <>\n      <VwDrawer\n        open={addedTaskText}\n        click={() => dispatch(toggleAddedTaskText(false))}\n      >\n        <Container maxWidth=\"md\">\n          <Grid container direction=\"column\">\n            <Box mt={5}>\n              <Grid item style={{ width: \"35%\" }}>\n                <Box borderBottom={1} className={classes.title}>\n                  今日行ったタスク\n                </Box>\n              </Grid>\n            </Box>\n          </Grid>\n        </Container>\n      </VwDrawer>\n    </>\n  );\n};\n\nexport default AddedTaskTextAfterWorkDrawer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../store\";\nimport axios from \"axios\";\n\nimport { toast } from \"react-toastify\";\n\nconst apiUrl = process.env.REACT_APP_BACKEND_URL;\nconst token = localStorage.token;\n\nexport const fetchAsyncTodaysAttendance = createAsyncThunk(\n  \"attendance/today\",\n  async (workspace: string) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${workspace}/attendances/today`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncUpdateTodaysAttendance = createAsyncThunk(\n  \"attendance/update\",\n  async (data: {\n    id: string;\n    attendance: {\n      startedAt?: string;\n      endedAt?: string;\n      restStartedAt?: string;\n      restEndedAt?: string;\n      comment?: string;\n      tasks?: string[];\n    };\n  }) => {\n    const res = await axios.put(\n      `${apiUrl}api/v1/attendances/${data.id}`,\n      data.attendance,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncGetMyAttendances = createAsyncThunk(\n  \"attendance/myAttendances\",\n  async (data: {\n    workspace: string;\n    query?: { year: string; month: string };\n  }) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${data.workspace}/attendances${\n        data.query ? `?year=${data.query.year}&month=${data.query.month}` : \"\"\n      }`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncGetAttendance = createAsyncThunk(\n  \"attendance/attendance\",\n  async (data: { id: string; workspace: string }) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${data.workspace}/attendances/${data.id}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\n// メンバー管理のユーザーの勤怠情報一覧\nexport const fetchAsyncGetMemberAttendance = createAsyncThunk(\n  \"attendance/memberAttendance\",\n  async (data: { userId: string; workspace: string }) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${data.workspace}/users/${data.userId}/attendances`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\ninterface attendanceState {\n  today: {\n    _id: string;\n    startedAt: string;\n    endedAt: string;\n    restStartedAt: string;\n    restEndedAt: string;\n  };\n  attendances: {\n    tasks: string[];\n    _id: string;\n    user: string;\n    workspace: string;\n    createdAt: string;\n    startedAt: string;\n    endedAt: string;\n    restStartedAt: string;\n    restEndedAt: string;\n    comment: string;\n  }[];\n  attendance: {\n    data: {\n      tasks: string[];\n      _id: string;\n      user: string;\n      workspace: string;\n      createdAt: string;\n      startedAt: string;\n      endedAt: string;\n      restStartedAt: string;\n      restEndedAt: string;\n      comment: string;\n    };\n    tasks: {\n      name: string;\n      project: { _id: string; name: string };\n      endDateAt: string;\n      _id: string;\n      user: { _id: string; name: string };\n    }[];\n  };\n  selectedAttendance: string;\n}\n\nconst initialState: attendanceState = {\n  today: {\n    _id: \"\",\n    startedAt: \"\",\n    endedAt: \"\",\n    restStartedAt: \"\",\n    restEndedAt: \"\",\n  },\n  attendances: [],\n  attendance: {\n    data: {\n      tasks: [],\n      _id: \"\",\n      user: \"\",\n      workspace: \"\",\n      createdAt: \"\",\n      startedAt: \"\",\n      endedAt: \"\",\n      restStartedAt: \"\",\n      restEndedAt: \"\",\n      comment: \"\",\n    },\n    tasks: [],\n  },\n  selectedAttendance: \"\",\n};\n\nconst attendanceSlice = createSlice({\n  name: \"attendance\",\n  initialState,\n  reducers: {\n    setSelectedAttendance(state, action) {\n      state.selectedAttendance = action.payload;\n    },\n    setAttendance(state, action) {\n      state.attendance = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncTodaysAttendance.fulfilled, (state, action) => {\n      state.today = action.payload.data;\n    });\n    builder.addCase(\n      fetchAsyncUpdateTodaysAttendance.fulfilled,\n      (state, action) => {\n        toast.info(\"勤怠情報を更新しました。\", {\n          position: toast.POSITION.TOP_CENTER,\n        });\n        state.today = action.payload.data;\n      }\n    );\n    builder.addCase(fetchAsyncGetMyAttendances.fulfilled, (state, action) => {\n      state.attendances = action.payload.data;\n    });\n    builder.addCase(fetchAsyncGetAttendance.fulfilled, (state, action) => {\n      state.attendance.data = action.payload.data;\n      state.attendance.tasks = action.payload.tasks;\n    });\n    builder.addCase(\n      fetchAsyncGetMemberAttendance.fulfilled,\n      (state, action) => {\n        console.log(action.payload);\n      }\n    );\n  },\n});\n\nexport const selectTodaysAttendance = (state: RootState) =>\n  state.attendance.today;\nexport const selectAttenances = (state: RootState) =>\n  state.attendance.attendances;\nexport const selectSelectedAttenances = (state: RootState) =>\n  state.attendance.selectedAttendance;\nexport const selectAttendance = (state: RootState) =>\n  state.attendance.attendance;\n\nexport const { setSelectedAttendance, setAttendance } = attendanceSlice.actions;\n\nexport default attendanceSlice.reducer;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport * as Yup from \"yup\";\nimport { Field, Form, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\n\nimport NewTaskAddAfterWorkDrawer from \"../../Task/components/TaskAddButtonAfetrWorkDrawer\";\nimport AddedTaskTextAfterWorkDrawer from \"../../Task/components/AddedTaskTextAfterWorkDrawer\";\nimport {\n  selectAddButtonAfterTask,\n  selectAddedTaskText,\n  toggleAddButtonAfterTask,\n} from \"../../../appSlice\";\nimport {\n  fetchAsyncUpdateTodaysAttendance,\n  selectTodaysAttendance,\n} from \"../attendanceSlice\";\n\nimport Color from \"../../../shared/util/color\";\n\nimport Box from \"@material-ui/core/Box\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { selectTodaysDoneTasks } from \"../../Task/taskSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainTitle: {\n      width: \"30%\",\n      fontSize: 23,\n    },\n    root: {\n      borderRadius: 10,\n      backgroundColor: Color.VWORK_LIGHT_BLUE,\n      marginTop: 25,\n    },\n    title: {\n      fontSize: 18,\n    },\n    timeArea: {\n      width: \"100%\",\n      fontSize: 18,\n    },\n    appBar: {\n      position: \"relative\",\n      backgroundColor: Color.VWORK_BLACK,\n      boxShadow: \"none\",\n    },\n    dialogTitle: {\n      fontSize: 30,\n      paddingLeft: 2,\n    },\n    dialogText: {\n      fontSize: 20,\n    },\n    additionalButton: {\n      borderRadius: 10,\n      width: \"10%\",\n      fontSize: 20,\n    },\n    todayUpdate: {\n      marginBottom: 10,\n    },\n    textField: {\n      width: \"85%\",\n    },\n    out: {\n      borderRadius: 10,\n      width: 150,\n      fontSize: 20,\n    },\n  })\n);\n\n// TODO: 出社時、退社時にuserのactiveを切り替える\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst CheckAttendanceArea = () => {\n  const classes = useStyles();\n  const moment = require(\"moment\");\n  const [open, setOpen] = React.useState(false);\n\n  const todaysAttendance = useSelector(selectTodaysAttendance);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const attendedClicked = async () => {\n    await dispatch(\n      fetchAsyncUpdateTodaysAttendance({\n        id: todaysAttendance._id,\n        attendance: { startedAt: moment() },\n      })\n    );\n  };\n\n  const restStartedClicked = async () => {\n    await dispatch(\n      fetchAsyncUpdateTodaysAttendance({\n        id: todaysAttendance._id,\n        attendance: { restStartedAt: moment() },\n      })\n    );\n  };\n\n  const restEndClicked = async () => {\n    if (window.confirm(\"休憩を終了しますか？\")) {\n      await dispatch(\n        fetchAsyncUpdateTodaysAttendance({\n          id: todaysAttendance._id,\n          attendance: { restEndedAt: moment() },\n        })\n      );\n    }\n  };\n\n  const dispatch = useDispatch();\n  const addButtonAfterTask = useSelector(selectAddButtonAfterTask);\n  const addedTaskText = useSelector(selectAddedTaskText);\n  const todaysDoneTasks = useSelector(selectTodaysDoneTasks);\n\n  return (\n    <>\n      <Box borderBottom={1} className={classes.mainTitle}>\n        勤怠管理\n      </Box>\n      {todaysAttendance._id ? (\n        <>\n          <Card className={classes.root}>\n            <CardContent>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                {moment().format(\"YYYY年MM月DD日\")}\n              </Typography>\n              <Grid\n                container\n                spacing={5}\n                direction=\"row\"\n                className={classes.timeArea}\n              >\n                <Grid item>\n                  <span style={{ fontWeight: 600 }}>出社</span>：\n                  {todaysAttendance.startedAt\n                    ? moment(todaysAttendance.startedAt)\n                        .utcOffset(\"+09:00\")\n                        .format(\"HH:mm\")\n                    : \"\"}\n                </Grid>\n                <Grid item>\n                  <Grid item>\n                    <span style={{ fontWeight: 600 }}>休憩</span>：\n                    {todaysAttendance.restStartedAt\n                      ? moment(todaysAttendance.restStartedAt)\n                          .utcOffset(\"+09:00\")\n                          .format(\"HH:mm\") + \" ~ \"\n                      : \"\"}\n                    {todaysAttendance.restEndedAt\n                      ? moment(todaysAttendance.restEndedAt)\n                          .utcOffset(\"+09:00\")\n                          .format(\"HH:mm\")\n                      : \"\"}\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <span style={{ fontWeight: 600 }}>退社</span>：\n                  {todaysAttendance.endedAt\n                    ? moment(todaysAttendance.endedAt)\n                        .utcOffset(\"+09:00\")\n                        .format(\"HH:mm\")\n                    : \"\"}\n                </Grid>\n              </Grid>\n            </CardContent>\n            <CardActions>\n              <Grid container direction=\"row\" justify=\"flex-end\">\n                <Box mr={1}>\n                  <Grid item>\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={!!todaysAttendance.startedAt}\n                      onClick={attendedClicked}\n                    >\n                      出社\n                    </Button>\n                  </Grid>\n                </Box>\n                <Box mr={1}>\n                  <Grid item>\n                    {!todaysAttendance.restStartedAt ? (\n                      <Button\n                        size=\"small\"\n                        variant=\"contained\"\n                        disabled={\n                          !todaysAttendance.startedAt ||\n                          !!todaysAttendance.restStartedAt ||\n                          !!todaysAttendance.endedAt\n                        }\n                        color=\"primary\"\n                        onClick={restStartedClicked}\n                      >\n                        休憩\n                      </Button>\n                    ) : (\n                      \"\"\n                    )}\n                    {todaysAttendance.restStartedAt ? (\n                      <Button\n                        size=\"small\"\n                        variant=\"contained\"\n                        disabled={\n                          !todaysAttendance.startedAt ||\n                          !!todaysAttendance.restEndedAt ||\n                          !!todaysAttendance.endedAt\n                        }\n                        color=\"secondary\"\n                        onClick={restEndClicked}\n                      >\n                        休憩終了\n                      </Button>\n                    ) : (\n                      \"\"\n                    )}\n                  </Grid>\n                </Box>\n                <Box mr={1}>\n                  <Grid item>\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleClickOpen}\n                      disabled={\n                        !todaysAttendance.startedAt ||\n                        !!todaysAttendance.endedAt ||\n                        (!!todaysAttendance.restStartedAt &&\n                          !todaysAttendance.restEndedAt)\n                      }\n                    >\n                      退社\n                    </Button>\n                  </Grid>\n                </Box>\n              </Grid>\n            </CardActions>\n          </Card>\n          <Dialog fullScreen open={open} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n              <Toolbar>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon />\n                </IconButton>\n                <img\n                  src={`${process.env.PUBLIC_URL}/images/logo192.png`}\n                  style={{ height: 25 }}\n                  className=\"imgstyle\"\n                  alt=\"icon\"\n                />\n                <Typography variant=\"h6\" className={classes.dialogTitle}>\n                  VWORK\n                </Typography>\n              </Toolbar>\n            </AppBar>\n            <Box mt={10}>\n              <Grid container direction=\"column\" className={classes.dialogText}>\n                <Container maxWidth=\"lg\">\n                  <Grid item>勤務お疲れさまでした</Grid>\n                  <Box mt={7}>\n                    <Grid item>\n                      <Grid container direction=\"column\">\n                        <Grid item>今日行ったタスクの確認をして下さい。</Grid>\n                        <Box mt={3}>\n                          <Grid item>\n                            <Button\n                              className={classes.additionalButton}\n                              onClick={() =>\n                                dispatch(toggleAddButtonAfterTask(true))\n                              }\n                              variant=\"contained\"\n                              color=\"secondary\"\n                            >\n                              追加\n                            </Button>\n                          </Grid>\n                        </Box>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                  <Grid item>\n                    <Typography variant=\"h5\">\n                      <span className=\"vwork-red\">\n                        {todaysDoneTasks && todaysDoneTasks.length > 0\n                          ? todaysDoneTasks.length\n                          : \"0\"}\n                        件\n                      </span>\n                      のタスクを追加済\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Box mt={3}>\n                      <Formik\n                        initialValues={{ comment: \"\" }}\n                        validationSchema={Yup.object().shape({})}\n                        onSubmit={async (values, actions) => {\n                          actions.setSubmitting(false);\n\n                          await dispatch(\n                            fetchAsyncUpdateTodaysAttendance({\n                              id: todaysAttendance._id,\n                              attendance: {\n                                endedAt: moment(),\n                                comment: values.comment,\n                                tasks: todaysDoneTasks,\n                              },\n                            })\n                          );\n\n                          setOpen(false);\n                        }}\n                      >\n                        {(props) => (\n                          <Form>\n                            <FormControl className={classes.textField}>\n                              <Field\n                                component={TextField}\n                                name=\"comment\"\n                                variant=\"outlined\"\n                                label=\"今日の振り返り\"\n                                margin=\"normal\"\n                                fullWidth\n                                multiline\n                                id=\"comment\"\n                                value={props.values.comment}\n                                rows={4}\n                              />\n                            </FormControl>\n                            <Box mt={10} mr={4}>\n                              <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"flex-end\"\n                              >\n                                <Button\n                                  type=\"submit\"\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  className={classes.out}\n                                >\n                                  退勤する\n                                </Button>\n                              </Grid>\n                            </Box>\n                          </Form>\n                        )}\n                      </Formik>\n                    </Box>\n                  </Grid>\n                </Container>\n              </Grid>\n            </Box>\n            {addButtonAfterTask ? <NewTaskAddAfterWorkDrawer /> : \"\"}\n\n            {addedTaskText ? <AddedTaskTextAfterWorkDrawer /> : \"\"}\n          </Dialog>\n        </>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default CheckAttendanceArea;\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\nimport TextureIcon from \"@material-ui/icons/Texture\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport Color from \"../../../shared/util/color\";\n\nconst useStyles = makeStyles({\n  icon: {\n    fontSize: 55,\n  },\n  iconArea: {\n    color: \"white\",\n    height: 150,\n    borderRadius: 8,\n  },\n  contentWidth: {\n    width: 150,\n  },\n});\n\ninterface ProjectItemProps {\n  id: string;\n  name: string;\n  bgColor: Color;\n  iconNum: number;\n}\n\nconst ProjectItem: FC<ProjectItemProps> = ({ id, name, bgColor, iconNum }) => {\n  const classes = useStyles();\n\n  const projectIcons = [\n    <FormatListBulletedIcon className={classes.icon} />,\n    <BusinessIcon className={classes.icon} />,\n    <DashboardIcon className={classes.icon} />,\n    <EqualizerIcon className={classes.icon} />,\n    <TableChartIcon className={classes.icon} />,\n    <TextureIcon className={classes.icon} />,\n    <TimelineIcon className={classes.icon} />,\n  ];\n  return (\n    <Link to={`/project/${id}`}>\n      <Box className={classes.contentWidth} mr={3} mb={3}>\n        <Grid container direction=\"column\">\n          <Grid\n            item\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            className={clsx(classes.iconArea, classes.contentWidth)}\n            style={{ backgroundColor: bgColor }}\n          >\n            {projectIcons[iconNum]}\n          </Grid>\n          <Grid item className={classes.contentWidth}>\n            <Box textAlign=\"center\">\n              <Typography>{name}</Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Link>\n  );\n};\n\nexport default ProjectItem;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"../../store\";\n\nimport { toast } from \"react-toastify\";\n\nconst apiUrl = process.env.REACT_APP_BACKEND_URL;\nconst token = localStorage.token;\n\nexport const fetchAsyncAllMyProjects = createAsyncThunk(\n  \"project/allMyProjects\",\n  async (workspace: string) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${workspace}/projects`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncGetProject = createAsyncThunk(\n  \"project/project\",\n  async (id: string) => {\n    const res = await axios.get(`${apiUrl}api/v1/projects/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncCreateProject = createAsyncThunk(\n  \"project/create\",\n  async (data: {\n    workspace: string;\n    projectData: { name: string; description: string };\n  }) => {\n    const res = await axios.post(\n      `${apiUrl}api/v1/workspaces/${data.workspace}/projects`,\n      data.projectData,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncGetNewMembers = createAsyncThunk(\n  \"project/newMembers\",\n  async (data: { workspaces: string; projectId: string }) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${data.workspaces}/projects/${data.projectId}/members/new`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncGetProjectMember = createAsyncThunk(\n  \"project/member\",\n  async (data: { workspaces: string; projectId: string; userId: string }) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${data.workspaces}/projects/${data.projectId}/users/${data.userId}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncAddMembers = createAsyncThunk(\n  \"project/addMember\",\n  async (data: { projectId: string; members: string[] }) => {\n    const res = await axios.put(\n      `${apiUrl}api/v1/projects/${data.projectId}/members`,\n      { members: data.members },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\n// メンバー管理でユーザーに紐づくプロジェクトを見られるようにする\nexport const fetchAsyncGetMemberProjects = createAsyncThunk(\n  \"project/memberProjects\",\n  async (data: { workspaces: string; userId: string }) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${data.workspaces}/users/${data.userId}/projects`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\ninterface projectState {\n  projects: {\n    _id: string;\n    name: string;\n    color: number;\n    icon: number;\n  }[];\n  project: {\n    _id: string;\n    name: string;\n    color: number;\n    icon: number;\n    description: string;\n    members: {\n      active: boolean;\n      email: string;\n      name: string;\n      registration: boolean;\n      role: string;\n      _id: string;\n    }[];\n    tasks: {\n      _id: string;\n      user: string;\n      name: string;\n      description: string;\n      startDateAt: string;\n      endDateAt: string;\n      state: number;\n      progress: number;\n      priority: number;\n      project: string | null;\n      todaysTask: boolean;\n    }[];\n  };\n  newMembers: { name: string; _id: string }[];\n  member: {\n    user: {\n      _id: string;\n      name: string;\n      email: string;\n      registration: boolean;\n      role: string;\n      lastAccessWorkspace: string;\n    };\n    tasks: {\n      name: string;\n      project: { _id: string; name: string };\n      endDateAt: string;\n      _id: string;\n      user: { _id: string; name: string };\n    }[];\n    profile: { position: string };\n  };\n  selectedMember: string;\n}\n\nconst initialState: projectState = {\n  projects: [],\n  project: {\n    _id: \"\",\n    name: \"\",\n    color: 0,\n    icon: 0,\n    description: \"\",\n    members: [],\n    tasks: [],\n  },\n  newMembers: [],\n  member: {\n    user: {\n      _id: \"\",\n      name: \"\",\n      email: \"\",\n      registration: false,\n      role: \"\",\n      lastAccessWorkspace: \"\",\n    },\n    tasks: [],\n    profile: { position: \"\" },\n  },\n  selectedMember: \"\",\n};\n\nconst projectSlice = createSlice({\n  name: \"project\",\n  initialState,\n  reducers: {\n    setSelectedMember(state, action) {\n      state.selectedMember = action.payload;\n    },\n    setProjectMember(state, action) {\n      state.member = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncAllMyProjects.fulfilled, (state, action) => {\n      state.projects = action.payload.data;\n    });\n    builder.addCase(fetchAsyncAllMyProjects.rejected, (state, action) => {});\n    builder.addCase(fetchAsyncGetProject.fulfilled, (state, action) => {\n      state.project = action.payload.data;\n    });\n    builder.addCase(fetchAsyncCreateProject.fulfilled, (state, action) => {\n      state.projects = action.payload.data;\n      toast.info(\"プロジェクトを追加しました。\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    });\n    builder.addCase(fetchAsyncGetNewMembers.fulfilled, (state, action) => {\n      state.newMembers = action.payload.data;\n    });\n    builder.addCase(fetchAsyncGetProjectMember.fulfilled, (state, action) => {\n      state.member.user = action.payload.user;\n      state.member.profile = action.payload.profile;\n      state.member.tasks = action.payload.tasks;\n    });\n    builder.addCase(fetchAsyncAddMembers.fulfilled, (state, action) => {\n      toast.info(\"プロジェクトにメンバーを追加しました\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    });\n    builder.addCase(fetchAsyncGetMemberProjects.fulfilled, (state, action) => {\n      console.log(action.payload);\n    });\n  },\n});\n\nexport const selectProjects = (state: RootState) => state.project.projects;\nexport const selectProject = (state: RootState) => state.project.project;\nexport const selectSelectedProjectMember = (state: RootState) =>\n  state.project.selectedMember;\nexport const selectProjectMember = (state: RootState) => state.project.member;\nexport const selectNewMembers = (state: RootState) => state.project.newMembers;\n\nexport const { setSelectedMember, setProjectMember } = projectSlice.actions;\n\nexport default projectSlice.reducer;\n","import React, { FC } from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ProjectItem from \"./ProjectItem\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { selectProjects } from \"../projectSlice\";\nimport { PROJECT_COLORS } from \"../../../shared/util/color\";\nimport { toggleAddProjectButton } from \"../../../appSlice\";\n\nconst useStyles = makeStyles({\n  title: {\n    fontSize: 23,\n    width: \"30%\",\n  },\n  contentWidth: {\n    width: 150,\n  },\n  icon: {\n    fontSize: 55,\n  },\n  iconStyle: {\n    borderStyle: \"dotted\",\n    borderRadius: 8,\n    height: 150,\n    cursor: \"pointer\",\n  },\n  iconArea: {\n    height: 150,\n    borderRadius: 8,\n  },\n});\n\ninterface ProjectListProps {\n  title: string;\n}\n\nconst ProjectList: FC<ProjectListProps> = ({ title = \"\" }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const projectData = useSelector(selectProjects);\n\n  return (\n    <>\n      <Box borderBottom={1} mt={7} mb={4} className={classes.title}>\n        {title}\n      </Box>\n\n      <Grid container justify=\"flex-start\">\n        <Box\n          className={clsx(classes.contentWidth, classes.iconStyle)}\n          mr={3}\n          mb={3}\n          onClick={() => dispatch(toggleAddProjectButton(true))}\n        >\n          <Grid container direction=\"column\">\n            <Grid\n              item\n              container\n              justify=\"center\"\n              alignItems=\"center\"\n              className={clsx(classes.iconArea, classes.contentWidth)}\n            >\n              <AddIcon style={{ fontSize: 100 }} />\n            </Grid>\n            <Grid item className={classes.contentWidth}>\n              <Box textAlign=\"center\">\n                <Typography>プロジェクト作成</Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n        {projectData.map((data, index) => {\n          return (\n            <ProjectItem\n              id={data._id}\n              name={data.name}\n              bgColor={PROJECT_COLORS[data.color]}\n              iconNum={data.icon}\n              key={data._id}\n            />\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nexport default ProjectList;\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Menu, { MenuProps } from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Container from \"@material-ui/core/Container\";\nimport Color from \"../../../shared/util/color\";\nimport { fetchAsyncLogout, selectUser } from \"../../../Auth/authSlice\";\nimport {\n  selectOpenMenu,\n  toggleOpenMenu,\n  toggleAddTaskButton,\n  toggleAddProjectButton,\n  toggleInviteMemberClicked,\n  toggleSetProfileClicked,\n} from \"../../../appSlice\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      boxShadow: \"none\",\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    hide: {\n      display: \"none\",\n    },\n    menuIcon: {\n      fontSize: 40,\n      color: Color.VWORK_GRAY,\n    },\n    title: {\n      color: Color.VWORK_GRAY,\n    },\n    addIcon: {\n      fontSize: 45,\n    },\n    icon: {\n      paddingLeft: 0,\n    },\n  })\n);\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: \"1px solid #d3d4d5\",\n  },\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"left\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    \"&:focus\": {\n      backgroundColor: Color.VWORK_WHITE,\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n        color: Color.VWORK_WHITE,\n      },\n    },\n  },\n}))(MenuItem);\n\ninterface MainHeaderProps {\n  title: string;\n}\n\nconst MainHeader: FC<MainHeaderProps> = ({ title = \"\" }) => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const user = useSelector(selectUser);\n\n  const logoutHandler = async () => {\n    await dispatch(fetchAsyncLogout());\n  };\n\n  // アドアイコンをクリックした時の処理\n  const [addIcon, setAddIcon] = React.useState<null | HTMLElement>(null);\n  const addIconClickedOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAddIcon(event.currentTarget);\n  };\n  const addIconClickedClose = () => {\n    setAddIcon(null);\n  };\n\n  // アバターアイコンをクリックした時の処理\n  const [AvatarIcon, setAvatarIcon] = React.useState<null | HTMLElement>(null);\n  const avatarIconClickedOpen = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setAvatarIcon(event.currentTarget);\n  };\n  const avatarIconClickedClose = () => {\n    setAvatarIcon(null);\n  };\n\n  const openMenu = useSelector(selectOpenMenu);\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <AppBar\n          style={{ backgroundColor: \"#fafafa\" }}\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: openMenu,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={() => dispatch(toggleOpenMenu(true))}\n              edge=\"start\"\n              className={clsx(openMenu && classes.hide)}\n            >\n              <MenuIcon className={classes.menuIcon} />\n            </IconButton>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Typography variant=\"h6\" className={classes.title} noWrap>\n                  {title}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                >\n                  <Grid item>\n                    <IconButton\n                      aria-label=\"add\"\n                      onClick={addIconClickedOpen}\n                      style={{ padding: 0, paddingRight: 10 }}\n                    >\n                      <AddCircleOutlineIcon className={classes.addIcon} />\n                    </IconButton>\n                  </Grid>\n                  <Grid item>\n                    <IconButton\n                      onClick={avatarIconClickedOpen}\n                      style={{ padding: 0, paddingRight: 10 }}\n                    >\n                      <Avatar>{user ? user.name.slice(0, 1) : \"\"}</Avatar>\n                    </IconButton>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </Container>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={addIcon}\n        keepMounted\n        open={Boolean(addIcon)}\n        onClick={addIconClickedClose}\n      >\n        <StyledMenuItem onClick={() => dispatch(toggleAddTaskButton(true))}>\n          タスク追加\n        </StyledMenuItem>\n\n        <StyledMenuItem onClick={() => dispatch(toggleAddProjectButton(true))}>\n          プロジェクト追加\n        </StyledMenuItem>\n\n        <StyledMenuItem\n          onClick={() => dispatch(toggleInviteMemberClicked(true))}\n        >\n          メンバー招待\n        </StyledMenuItem>\n      </StyledMenu>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={AvatarIcon}\n        keepMounted\n        open={Boolean(AvatarIcon)}\n        onClick={avatarIconClickedClose}\n      >\n        <StyledMenuItem onClick={() => dispatch(toggleSetProfileClicked(true))}>\n          プロフィール設定\n        </StyledMenuItem>\n        <Link\n          to=\"/workspaces\"\n          style={{ textDecoration: \"none\", color: Color.VWORK_BLACK }}\n        >\n          <StyledMenuItem>他のworkspace </StyledMenuItem>\n        </Link>\n        <StyledMenuItem onClick={logoutHandler}>ログアウト</StyledMenuItem>\n      </StyledMenu>\n    </div>\n  );\n};\n\nexport default MainHeader;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport axios from \"axios\";\n\nimport { toast } from \"react-toastify\";\n\nconst apiUrl = process.env.REACT_APP_BACKEND_URL;\nconst token = localStorage.token;\n\nexport const fetchAsyncInviteMember = createAsyncThunk(\n  \"dashboard/invite\",\n  async (data: {\n    workspace: string;\n    invitations: { name: string; email: string }[];\n  }) => {\n    const res = await axios.post(\n      `${apiUrl}api/v1/workspaces/${data.workspace}/members`,\n      { invitations: data.invitations },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncUpdateUserProfile = createAsyncThunk(\n  \"dashboard/updateProfile\",\n  async (data: {\n    workspace: string;\n    userId: string;\n    bodyData: { name?: string; email?: string; position?: string };\n  }) => {\n    const res = await axios.put(\n      `${apiUrl}api/v1/workspaces/${data.workspace}/users/${data.userId}/profile`,\n      data.bodyData,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\ninterface dashboardState {\n  owner: boolean;\n  workspace: string;\n  selectedMembers: { _id: string; name: string }[];\n}\n\nconst initialState: dashboardState = {\n  owner: false,\n  workspace: \"\",\n  selectedMembers: [],\n};\n\nconst dashboardSlice = createSlice({\n  name: \"dashboard\",\n  initialState,\n  reducers: {\n    setWorkspace(state, action) {\n      state.workspace = action.payload;\n    },\n    setSelectedMembers(state, action) {\n      state.selectedMembers = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncInviteMember.fulfilled, (state, action) => {\n      toast.info(\"招待メールを送信しました。\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    });\n    builder.addCase(fetchAsyncInviteMember.rejected, (state, action) => {\n      toast.error(\"招待に失敗しました。\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    });\n    builder.addCase(fetchAsyncUpdateUserProfile.fulfilled, (state, action) => {\n      toast.info(\"プロフィールを更新しました。\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    });\n    builder.addCase(fetchAsyncUpdateUserProfile.rejected, (state, action) => {\n      toast.error(\"プロフィールの更新に失敗しました。\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    });\n  },\n});\n\nexport const { setWorkspace, setSelectedMembers } = dashboardSlice.actions;\nexport const selectNowWorkspace = (state: RootState) =>\n  state.dashboard.workspace;\nexport const selectSelectedMembers = (state: RootState) =>\n  state.dashboard.selectedMembers;\n\nexport default dashboardSlice.reducer;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport TaskList from \"../Task/components/TaskList\";\nimport CheckAttendanceArea from \"../Attendance/components/CheckAttendanceArea\";\nimport ProjectList from \"../Project/components/ProjectList\";\nimport MainHeader from \"../../shared/components/Navigation/MainHeader\";\nimport {\n  selectNearDeadlineTasks,\n  selectRecentTasks,\n  selectTasks,\n} from \"../Task/taskSlice\";\nimport { selectUser, selectWorkspace } from \"../../Auth/authSlice\";\nimport { setSelectedMembers } from \"../dashboardSlice\";\nimport { fetchAsyncTodaysAttendance } from \"../Attendance/attendanceSlice\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const tasks = useSelector(selectTasks);\n  const nearDeadlineTasks = useSelector(selectNearDeadlineTasks);\n  const recentTasks = useSelector(selectRecentTasks);\n  const workspace = useSelector(selectWorkspace);\n\n  const getTodaysAttendance = useCallback(\n    async (workspace) => {\n      await dispatch(fetchAsyncTodaysAttendance(workspace));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    dispatch(setSelectedMembers([user]));\n  }, [dispatch, user, tasks]);\n\n  useEffect(() => {\n    if (workspace) {\n      getTodaysAttendance(workspace);\n    }\n  }, [workspace, getTodaysAttendance]);\n\n  return (\n    <>\n      <Container>\n        <MainHeader title=\"ホーム\" />\n        <CheckAttendanceArea />\n        {nearDeadlineTasks && nearDeadlineTasks.length > 0 ? (\n          <TaskList\n            title=\"期限が近いタスク\"\n            iconType=\"alert\"\n            taskData={nearDeadlineTasks}\n          />\n        ) : (\n          \"\"\n        )}\n        {recentTasks && recentTasks.length > 0 ? (\n          <TaskList title=\"アクティブなタスク\" taskData={recentTasks} />\n        ) : (\n          \"\"\n        )}\n\n        <ProjectList title=\"参加しているプロジェクト\" />\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Color from \"../../../shared/util/color\";\nimport { toggleAddTaskButton } from \"../../../appSlice\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { fetchAsyncTasks, selectTaskQuery, setQuery } from \"../taskSlice\";\nimport { selectWorkspace } from \"../../../Auth/authSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      backgroundColor: Color.VWORK_DARK_BLUE,\n      width: 150,\n      fontSize: 15,\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n  })\n);\n\nconst TaskAddButton = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const workspace = useSelector(selectWorkspace);\n\n  const getTasks = useCallback(\n    async (workspace, query) => {\n      await dispatch(fetchAsyncTasks({ workspace, query }));\n    },\n    [dispatch]\n  );\n\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) => {\n    dispatch(setQuery(event.target.value));\n    getTasks(workspace, event.target.value);\n  };\n\n  const taskQuery = useSelector(selectTaskQuery);\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n        style={{ paddingBottom: 0 }}\n      >\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            startIcon={<AddIcon />}\n            onClick={() => dispatch(toggleAddTaskButton(true))}\n            data-testid=\"test\"\n          >\n            タスクを追加\n          </Button>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.margin}>\n            <InputLabel id=\"task-state\">絞り込み</InputLabel>\n            <Select\n              id=\"task-state\"\n              onChange={handleChange}\n              style={{ width: 200 }}\n              value={taskQuery}\n            >\n              <MenuItem value=\"\">未選択</MenuItem>\n              <MenuItem value=\"0\">TODO</MenuItem>\n              <MenuItem value=\"1\">進行中</MenuItem>\n              <MenuItem value=\"2\">完了</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default TaskAddButton;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport TaskAddButton from \"../components/TaskAddButton\";\nimport TaskList from \"../components/TaskList\";\nimport MainHeader from \"../../../shared/components/Navigation/MainHeader\";\nimport { selectUser, selectWorkspace } from \"../../../Auth/authSlice\";\nimport {\n  fetchAsyncTasks,\n  selectTaskQuery,\n  selectTasks,\n  setQuery,\n} from \"../taskSlice\";\n\nimport Container from \"@material-ui/core/Container\";\nimport { setSelectedMembers } from \"../../dashboardSlice\";\n\nconst TASK_STATE = [\"TODO\", \"進行中\", \"完了\"];\n\nconst MyTask = () => {\n  const dispatch = useDispatch();\n  const workspace = useSelector(selectWorkspace);\n  const tasksData = useSelector(selectTasks);\n  const user = useSelector(selectUser);\n  const tasks = useSelector(selectTasks);\n  const taskQuery = useSelector(selectTaskQuery);\n\n  const getTasks = useCallback(\n    async (workspace) => {\n      await dispatch(fetchAsyncTasks({ workspace }));\n    },\n    [dispatch]\n  );\n\n  const setTaskQuery = useCallback(() => {\n    dispatch(setQuery(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (workspace) {\n      getTasks(workspace);\n    }\n    setTaskQuery();\n  }, [getTasks, workspace, setTaskQuery]);\n\n  useEffect(() => {\n    dispatch(setSelectedMembers([user]));\n  }, [dispatch, user, tasks]);\n\n  return (\n    <>\n      <Container>\n        <MainHeader title=\"マイタスク\" />\n        <TaskAddButton />\n        {tasksData.todaysTasks && tasksData.todaysTasks.length > 0 ? (\n          <TaskList title=\"今日やる\" taskData={tasksData.todaysTasks} />\n        ) : (\n          \"\"\n        )}\n        {tasksData.count ? (\n          <TaskList\n            title={\n              taskQuery\n                ? `【${TASK_STATE[Number(taskQuery)]}】タスク一覧`\n                : \"一覧\"\n            }\n            taskData={tasksData.data}\n          />\n        ) : (\n          \"\"\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default MyTask;\n","import React, { FC } from \"react\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    icon: {\n      fontSize: 30,\n    },\n  })\n);\n\ninterface MemberItemProps {\n  name: string;\n  memberId: string;\n}\n\nconst MemberItem: FC<MemberItemProps> = ({ name, memberId }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const handlePageChange = () => {\n    history.push(\"/members/1\");\n  };\n  return (\n    <>\n      <ListItem button style={{ paddingLeft: 0 }} onClick={handlePageChange}>\n        <ListItemIcon>\n          <Avatar className={classes.icon}>{name.slice(0, 1)}</Avatar>\n        </ListItemIcon>\n        <ListItemText primary={name} />\n      </ListItem>\n    </>\n  );\n};\n\nexport default MemberItem;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MemberItem from \"./MemberItem\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      fontSize: 23,\n      width: 900,\n    },\n  })\n);\n\n// interface MemberListProps {\n//   members: {\n//     active: boolean;\n//     email: string;\n//     name: string;\n//     registration: boolean;\n//     role: string;\n//     _id: string;\n//   }[];\n// }\nconst members = [{ name: \"Shogo\", _id: \"1\" }];\n\nconst MemberList = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box borderBottom={1} mt={7} mb={2} className={classes.title}>\n        メンバー\n      </Box>\n      <Grid container direction=\"column\" justify=\"flex-start\">\n        <Grid item>\n          {members.map((member, index) => {\n            return (\n              <MemberItem\n                name={member.name}\n                key={index}\n                memberId={member._id}\n              />\n            );\n          })}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MemberList;\n","import React from \"react\";\nimport MemberList from \"../components/MemberList\";\nimport Container from \"@material-ui/core/Container\";\nimport MainHeader from \"../../../shared/components/Navigation/MainHeader\";\n\nconst Members = () => {\n  return (\n    <>\n      <MainHeader title=\"メンバー管理\" />\n      <Container>\n        <MemberList />\n      </Container>\n    </>\n  );\n};\n\nexport default Members;\n","import React, { useCallback, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ja } from \"date-fns/locale\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectWorkspace } from \"../../../Auth/authSlice\";\nimport { fetchAsyncGetMyAttendances } from \"../attendanceSlice\";\n\nconst DatePickerArea = () => {\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\n  const [month, setMonth] = useState(moment().format(\"M\"));\n\n  const workspace = useSelector(selectWorkspace);\n\n  const dispatch = useDispatch();\n\n  const getAttendance = useCallback(\n    async (workspace, year, month) => {\n      await dispatch(\n        fetchAsyncGetMyAttendances({ workspace, query: { year, month } })\n      );\n    },\n    [dispatch]\n  );\n\n  const handleDateChange = (date: Date | null) => {\n    const querYear = moment(date).format(\"YYYY\");\n    const queryMonth = moment(date).format(\"MM\");\n    setMonth(queryMonth);\n\n    const updatedDate = moment(`${querYear}-${queryMonth}-01`).toDate();\n    setSelectedDate(updatedDate);\n\n    getAttendance(workspace, querYear, queryMonth);\n  };\n\n  return (\n    <>\n      <Box mt={10}>\n        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n          <Grid item>\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ja}>\n              <DatePicker\n                openTo=\"month\"\n                views={[\"year\", \"month\"]}\n                label=\"絞り込む\"\n                value={selectedDate}\n                onChange={handleDateChange}\n                format=\"yyyy年MM月\"\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n        </Grid>\n        <Box borderBottom={1}>\n          <Typography variant={\"h5\"}>{month}月の勤怠情報</Typography>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default DatePickerArea;\n","import React, { FC } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nimport { toggleKintaiCardClicked } from \"../../../appSlice\";\nimport { setSelectedAttendance } from \"../attendanceSlice\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minWidth: 275,\n      borderRadius: 10,\n      marginTop: 25,\n    },\n    title: {\n      fontSize: 18,\n    },\n    time: {\n      marginRight: 30,\n    },\n    space: {\n      marginTop: 20,\n    },\n    task: {\n      fontSize: 20,\n    },\n  })\n);\n\ninterface AttendanceItemProps {\n  attendance: {\n    tasks: string[];\n    _id: string;\n    user: string;\n    workspace: string;\n    createdAt: string;\n    startedAt: string;\n    endedAt: string;\n    restStartedAt: string;\n    restEndedAt: string;\n    comment: string;\n  };\n}\n\nconst AttendanceItem: FC<AttendanceItemProps> = ({ attendance }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  //　勤務時間\n  const start = moment(attendance.startedAt).utcOffset(\"+09:00\");\n  const end = moment(attendance.endedAt).utcOffset(\"+09:00\");\n  const diff = Math.round(end.diff(start, \"minute\", true));\n\n  // 休憩時間を引く\n  const restStart = moment(attendance.restStartedAt).utcOffset(\"+09:00\");\n  const restEnd = moment(attendance.restEndedAt).utcOffset(\"+09:00\");\n  const restDiff = Math.round(restEnd.diff(restStart, \"minute\", true));\n\n  const totalDiff = diff - restDiff;\n\n  const hour = Math.round(totalDiff / 60);\n  const minutes = totalDiff % 60;\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardActionArea\n          onClick={() => {\n            dispatch(setSelectedAttendance(attendance._id));\n            dispatch(toggleKintaiCardClicked(true));\n          }}\n        >\n          <Container>\n            <Box pt={2} pb={3}>\n              <Grid container direction=\"column\">\n                <Grid item className={classes.space}>\n                  <Box borderBottom={1}>\n                    <Typography variant=\"h5\">\n                      {moment(attendance.createdAt)\n                        .utcOffset(\"+09:00\")\n                        .format(\"YYYY年MM月DD日\")}\n                    </Typography>\n                  </Box>\n                </Grid>\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"center\"\n                  >\n                    <Grid item style={{ width: \"90%\" }}>\n                      <Grid\n                        container\n                        direction=\"row\"\n                        alignItems=\"center\"\n                        className={clsx(classes.title, classes.space)}\n                      >\n                        <Grid item className={classes.time}>\n                          <span style={{ fontWeight: 600 }}>出社</span>:\n                          {attendance.startedAt\n                            ? moment(attendance.startedAt)\n                                .utcOffset(\"+09:00\")\n                                .format(\"HH:mm\")\n                            : \"\"}\n                        </Grid>\n                        <Grid item className={classes.time}>\n                          <span style={{ fontWeight: 600 }}>休憩</span>:\n                          {attendance.restStartedAt\n                            ? moment(attendance.restStartedAt)\n                                .utcOffset(\"+09:00\")\n                                .format(\"HH:mm\")\n                            : \"\"}\n                          ~\n                          {attendance.restEndedAt\n                            ? moment(attendance.restEndedAt)\n                                .utcOffset(\"+09:00\")\n                                .format(\"HH:mm\")\n                            : \"\"}\n                        </Grid>\n                        <Grid item className={classes.time}>\n                          <span style={{ fontWeight: 600 }}>退社</span>:\n                          {attendance.endedAt\n                            ? moment(attendance.endedAt)\n                                .utcOffset(\"+09:00\")\n                                .format(\"HH:mm\")\n                            : \"\"}\n                        </Grid>\n                        <Grid item className={classes.time}>\n                          <span style={{ fontWeight: 600 }}>【勤務時間</span>:\n                          {`${hour}時間${minutes}分`}】\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                  >\n                    <Box mr={3}>\n                      <Grid item>\n                        <CheckCircleIcon color=\"secondary\" />\n                      </Grid>\n                    </Box>\n                    <Grid item className={classes.task}>\n                      <Typography variant={\"body1\"}>\n                        {attendance.tasks && attendance.tasks.length}\n                        件のタスクに対応\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Box mt={3}>\n                    <Grid container direction=\"row\" justify=\"flex-start\">\n                      <Grid item>\n                        <Box mr={3}>\n                          <ChatBubbleIcon color=\"secondary\" />\n                        </Box>\n                      </Grid>\n                      <Grid item style={{ width: \"90%\" }}>\n                        <Typography variant={\"body1\"}>\n                          {attendance.comment}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Box>\n          </Container>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nexport default AttendanceItem;\n","import React, { FC } from \"react\";\nimport AttendanceItem from \"./AttendanceItem\";\nimport Grid from \"@material-ui/core/Grid\";\n\ninterface AttendanceListProps {\n  attendances: {\n    tasks: string[];\n    _id: string;\n    user: string;\n    workspace: string;\n    createdAt: string;\n    startedAt: string;\n    endedAt: string;\n    restStartedAt: string;\n    restEndedAt: string;\n    comment: string;\n  }[];\n}\n\nconst AttendanceList: FC<AttendanceListProps> = ({ attendances }) => {\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"flex-start\">\n        <Grid item>\n          {attendances &&\n            attendances.map((attendance, index) => {\n              return <AttendanceItem key={index} attendance={attendance} />;\n            })}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AttendanceList;\n","import React, { useCallback, useEffect } from \"react\";\nimport CheckAttendanceArea from \"../components/CheckAttendanceArea\";\nimport DatePickerArea from \"../components/DatePickerArea\";\nimport AttendanceList from \"../components/AttendanceList\";\nimport MainHeader from \"../../../shared/components/Navigation/MainHeader\";\nimport Container from \"@material-ui/core/Container\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectWorkspace } from \"../../../Auth/authSlice\";\nimport {\n  fetchAsyncGetMyAttendances,\n  fetchAsyncTodaysAttendance,\n  selectAttenances,\n} from \"../attendanceSlice\";\n\nconst MyAttendance = () => {\n  const dispatch = useDispatch();\n  const workspace = useSelector(selectWorkspace);\n  const attendances = useSelector(selectAttenances);\n\n  const getTodaysAttendance = useCallback(\n    async (workspace) => {\n      await dispatch(fetchAsyncTodaysAttendance(workspace));\n    },\n    [dispatch]\n  );\n\n  const getAttendances = useCallback(\n    async (workspace) => {\n      await dispatch(fetchAsyncGetMyAttendances({ workspace }));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (workspace) {\n      getTodaysAttendance(workspace);\n      getAttendances(workspace);\n    }\n  }, [workspace, getTodaysAttendance, getAttendances]);\n\n  return (\n    <>\n      <Container>\n        <MainHeader title=\"勤怠管理\" />\n        <CheckAttendanceArea />\n        <DatePickerArea />\n        <AttendanceList attendances={attendances} />\n      </Container>\n    </>\n  );\n};\n\nexport default MyAttendance;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Color from \"../../../shared/util/color\";\nimport { toggleAddTaskButton } from \"../../../appSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      backgroundColor: Color.VWORK_DARK_BLUE,\n      width: 150,\n      fontSize: 15,\n    },\n  })\n);\n\nconst AddButtonInProject = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            startIcon={<AddIcon />}\n            onClick={() => dispatch(toggleAddTaskButton(true))}\n            data-testid=\"test\"\n          >\n            タスクを追加\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AddButtonInProject;\n","import React, { FC } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { toggleMemberIconClicked } from \"../../../appSlice\";\nimport { setSelectedMember } from \"../projectSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    icon: {\n      fontSize: 30,\n    },\n  })\n);\n\ninterface ProjectMemberItemProps {\n  name: string;\n  memberId: string;\n}\n\nconst ProjectMemberItem: FC<ProjectMemberItemProps> = ({ name, memberId }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  return (\n    <>\n      <ListItem\n        button\n        style={{ paddingLeft: 0 }}\n        onClick={() => {\n          dispatch(setSelectedMember(memberId));\n          dispatch(toggleMemberIconClicked(true));\n        }}\n        data-testid=\"test\"\n      >\n        <ListItemIcon>\n          <Avatar className={classes.icon}>{name.slice(0, 1)}</Avatar>\n        </ListItemIcon>\n        <ListItemText primary={name} />\n      </ListItem>\n    </>\n  );\n};\n\nexport default ProjectMemberItem;\n","import React from \"react\";\nimport * as Yup from \"yup\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { Box } from \"@material-ui/core\";\nimport { CheckboxWithLabel } from \"formik-material-ui\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchAsyncAddMembers,\n  fetchAsyncGetProject,\n  selectNewMembers,\n  selectProject,\n} from \"../projectSlice\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { toggleAddMemberButton, toggleLoading } from \"../../../appSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      width: \"50%\",\n    },\n  })\n);\n\nconst AddMemberList = () => {\n  const classes = useStyles();\n  const newMembers = useSelector(selectNewMembers);\n  const project = useSelector(selectProject);\n\n  const dispatch = useDispatch();\n\n  interface NewMemberFormValues {\n    members: string[];\n  }\n\n  const initialValues: NewMemberFormValues = {\n    members: [],\n  };\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={Yup.object().shape({})}\n        onSubmit={async (values, actions) => {\n          actions.setSubmitting(false);\n          dispatch(toggleLoading(true));\n          await dispatch(\n            fetchAsyncAddMembers({\n              projectId: project._id,\n              members: values.members,\n            })\n          );\n          await dispatch(fetchAsyncGetProject(project._id));\n          dispatch(toggleLoading(false));\n          dispatch(toggleAddMemberButton(false));\n        }}\n      >\n        {({ values }) => (\n          <Form>\n            <FieldArray\n              name=\"members\"\n              render={(arrayHelpers) => (\n                <div>\n                  {newMembers &&\n                    newMembers.map((member, index) => (\n                      <div key={`newMember-${index}`}>\n                        <Field\n                          component={CheckboxWithLabel}\n                          Label={{ label: member.name }}\n                          name=\"tasks\"\n                          type=\"checkbox\"\n                          value={member._id}\n                          checked={values.members.includes(member._id)}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            if (e.target.checked) {\n                              arrayHelpers.push(member._id);\n                            } else {\n                              const idx = values.members.indexOf(member._id);\n                              arrayHelpers.remove(idx);\n                            }\n                          }}\n                          icon={<RadioButtonUncheckedIcon />}\n                          checkedIcon={<RadioButtonCheckedIcon />}\n                        />\n                      </div>\n                    ))}\n                  <DialogActions>\n                    <Box\n                      mt={5}\n                      width=\"100%\"\n                      display=\"flex\"\n                      justifyContent=\"center\"\n                    >\n                      <Button\n                        type=\"submit\"\n                        className={classes.button}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        追加\n                      </Button>\n                    </Box>\n                  </DialogActions>\n                </div>\n              )}\n            />\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddMemberList;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AddMemberList from \"./AddMemberList\";\nimport VwDrawer from \"../../../shared/components/Common/VwDrawer\";\nimport {\n  selectAddMemberButton,\n  toggleAddMemberButton,\n} from \"../../../appSlice\";\nimport { fetchAsyncGetNewMembers, selectProject } from \"../projectSlice\";\nimport { selectWorkspace } from \"../../../Auth/authSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    closeIcon: {\n      padding: 0,\n    },\n    drawerTitle: {\n      fontSize: 25,\n      width: \"85%\",\n    },\n    button: {\n      width: 300,\n    },\n  })\n);\n\nconst NewAddProjectMemberDrawer = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const addMemberButton = useSelector(selectAddMemberButton);\n  const workspaces = useSelector(selectWorkspace);\n  const project = useSelector(selectProject);\n  const projectId = project._id;\n\n  const getNewMembers = useCallback(\n    async (workspaces, projectId) => {\n      await dispatch(fetchAsyncGetNewMembers({ workspaces, projectId }));\n    },\n    [dispatch]\n  );\n  useEffect(() => {\n    getNewMembers(workspaces, projectId);\n  }, [getNewMembers, projectId, workspaces]);\n\n  return (\n    <>\n      <VwDrawer\n        open={addMemberButton}\n        click={() => dispatch(toggleAddMemberButton(false))}\n      >\n        <Container maxWidth=\"md\">\n          <Box borderBottom={1} mt={10} mb={5} className={classes.drawerTitle}>\n            追加するメンバーを選択\n          </Box>\n          <AddMemberList />\n        </Container>\n      </VwDrawer>\n    </>\n  );\n};\n\nexport default NewAddProjectMemberDrawer;\n","import React, { FC } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Box from \"@material-ui/core/Box\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ProjectMemberItem from \"./ProjectMemberItem\";\nimport NewAddProjectMemberDrawer from \"./NewAddProjectMemberDrawer\";\nimport {\n  selectAddMemberButton,\n  toggleAddMemberButton,\n} from \"../../../appSlice\";\n\nconst drawerWidth = \"50%\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      fontSize: 23,\n      width: 300,\n    },\n    icon: {\n      fontSize: 45,\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    closeIcon: {\n      padding: 0,\n    },\n    drawerTitle: {\n      fontSize: 25,\n      width: \"85%\",\n    },\n    button: {\n      width: 300,\n    },\n  })\n);\n\ninterface ProjectMemberListProps {\n  members: {\n    active: boolean;\n    email: string;\n    name: string;\n    registration: boolean;\n    role: string;\n    _id: string;\n  }[];\n}\n\nconst ProjectMemberList: FC<ProjectMemberListProps> = ({ members }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const addMemberButton = useSelector(selectAddMemberButton);\n\n  return (\n    <>\n      <Box borderBottom={1} mt={7} mb={2} className={classes.title}>\n        メンバー\n      </Box>\n      <Grid container direction=\"column\" justify=\"flex-start\">\n        <Grid item>\n          <ListItem\n            button\n            onClick={() => dispatch(toggleAddMemberButton(true))}\n            style={{ paddingLeft: 0 }}\n            data-testid=\"testId\"\n          >\n            <ListItemIcon>\n              <AddCircleOutlineIcon className={classes.icon} />\n            </ListItemIcon>\n            <ListItemText primary=\"メンバーを追加\" />\n          </ListItem>\n        </Grid>\n        <Grid item>\n          {members &&\n            members.map((member, index) => {\n              return (\n                <ProjectMemberItem\n                  name={member.name}\n                  key={index}\n                  memberId={member._id}\n                />\n              );\n            })}\n        </Grid>\n      </Grid>\n      {addMemberButton ? <NewAddProjectMemberDrawer /> : \"\"}\n    </>\n  );\n};\n\nexport default ProjectMemberList;\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport AddButtonInProject from \"../components/AddButtonInProject\";\nimport ProjectMemberList from \"../components/ProjectMemberList\";\nimport TaskList from \"../../Task/components/TaskList\";\nimport MainHeader from \"../../../shared/components/Navigation/MainHeader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAsyncGetProject, selectProject } from \"../projectSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchAsyncProjectTasks, selectTasks } from \"../../Task/taskSlice\";\nimport { setSelectedMembers } from \"../../dashboardSlice\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { Box } from \"@material-ui/core\";\n\nconst Project = () => {\n  const dispatch = useDispatch();\n\n  const project = useSelector(selectProject);\n  const tasks = useSelector(selectTasks);\n\n  interface PraramsType {\n    projectId: string;\n  }\n  const projectId = useParams<PraramsType>().projectId;\n\n  const getProject = useCallback(\n    async (projectId) => {\n      await dispatch(fetchAsyncGetProject(projectId));\n    },\n    [dispatch]\n  );\n\n  const getTasks = useCallback(\n    async (projectId) => {\n      await dispatch(fetchAsyncProjectTasks(projectId));\n    },\n    [dispatch]\n  );\n\n  const setMembers = useCallback(\n    (members) => {\n      dispatch(setSelectedMembers(members));\n    },\n    [dispatch]\n  );\n\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (mounted.current) {\n      setMembers(project.members);\n    } else {\n      mounted.current = true;\n    }\n  }, [setMembers, project]);\n\n  useEffect(() => {\n    getProject(projectId);\n    getTasks(projectId);\n  }, [getProject, getTasks, projectId]);\n\n  return (\n    <>\n      <Container>\n        <MainHeader title={project.name} />\n        <Box mb={5} pb={1} borderBottom={1} width=\"69%\">\n          <Typography variant=\"body1\">{project.description}</Typography>\n        </Box>\n        <AddButtonInProject />\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Grid item style={{ width: \"70%\" }}>\n            <TaskList title=\"タスク一覧\" taskData={tasks.data} />\n          </Grid>\n          <Grid item>\n            <ProjectMemberList members={project.members} />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default Project;\n","import React, { FC } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport Brightness1Icon from \"@material-ui/icons/Brightness1\";\nimport Color from \"../../../shared/util/color\";\n\ninterface SideProjectItemProps {\n  title: string;\n  bgColor: Color;\n  projectId: string;\n}\n\nconst SideProjectItem: FC<SideProjectItemProps> = ({\n  title = \"\",\n  bgColor,\n  projectId,\n}) => {\n  return (\n    <>\n      <List style={{ padding: 0 }}>\n        <ListItem\n          button\n          style={{ paddingTop: 0, paddingBottom: 0 }}\n          component={NavLink}\n          to={`/project/${projectId}`}\n          exact\n        >\n          <ListItemIcon>\n            <Brightness1Icon style={{ color: bgColor }} />\n          </ListItemIcon>\n          <ListItemText primary={title} />\n        </ListItem>\n      </List>\n    </>\n  );\n};\n\nexport default SideProjectItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SideProjectItem from \"./SideProjectItem\";\nimport { selectProjects } from \"../projectSlice\";\nimport { PROJECT_COLORS } from \"../../../shared/util/color\";\n\nconst SideProjectList = () => {\n  const projectData = useSelector(selectProjects);\n  return (\n    <>\n      {projectData.map((data, index) => {\n        return (\n          <SideProjectItem\n            title={data.name}\n            bgColor={PROJECT_COLORS[data.color]}\n            projectId={data._id}\n            key={data._id}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default SideProjectList;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Box from \"@material-ui/core/Box\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SideProjectList from \"./SideProjectList\";\nimport Color from \"../../../shared/util/color\";\nimport { toggleAddProjectButton } from \"../../../appSlice\";\n\nconst DrawerWith = \"50%\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      fontSize: 15,\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n    drawer: {\n      width: DrawerWith,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: DrawerWith,\n    },\n    iconStyle: {\n      color: Color.VWORK_WHITE,\n      padding: 0,\n    },\n    icon: {\n      borderRadius: 10,\n    },\n  })\n);\n\nconst MyProject = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Box borderBottom={1} mt={10} mx={2} mb={2} className={classes.title}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Typography>マイプロジェクト</Typography>\n          </Grid>\n          <Grid item>\n            <IconButton\n              className={classes.iconStyle}\n              onClick={() => dispatch(toggleAddProjectButton(true))}\n              data-testid=\"test\"\n            >\n              <AddIcon className={classes.icon} />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Box>\n      <SideProjectList />\n    </>\n  );\n};\n\nexport default MyProject;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { selectOpenMenu, toggleOpenMenu } from \"../../../appSlice\";\nimport { selectWorkspaceName } from \"../../../Auth/authSlice\";\nimport MyProject from \"../../../Dashboard/Project/components/MyProject\";\nimport Color from \"../../util/color\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      color: Color.VWORK_BLACK,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      backgroundColor: Color.VWORK_BLACK,\n      color: Color.VWORK_WHITE,\n    },\n    title: {\n      fontWeight: 900,\n      cursor: \"pointer\",\n    },\n    mainTitle: {\n      fontSize: 30,\n      paddingLeft: 2,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },\n    menuIcon: {\n      fontSize: 40,\n      color: Color.VWORK_GRAY,\n    },\n    icon: {\n      color: Color.VWORK_WHITE,\n    },\n  })\n);\n\nconst SideBar = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const pageChangeHandler = () => {\n    history.push(\"/\");\n  };\n\n  const dispatch = useDispatch();\n  const openMenu = useSelector(selectOpenMenu);\n\n  const workspaceName = useSelector(selectWorkspaceName);\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={openMenu}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item onClick={pageChangeHandler}>\n              <Box ml={2}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  className={classes.title}\n                >\n                  <Grid item>\n                    <img\n                      src={`${process.env.PUBLIC_URL}/images/logo192.png`}\n                      style={{ height: 25 }}\n                      className=\"imgstyle\"\n                      alt=\"icon\"\n                    />\n                  </Grid>\n                  <Grid item className={clsx(classes.mainTitle, \"logo\")}>\n                    VWORK\n                  </Grid>\n                </Grid>\n              </Box>\n            </Grid>\n            <Grid item>\n              <div className={classes.drawerHeader}>\n                <IconButton onClick={() => dispatch(toggleOpenMenu(false))}>\n                  <MenuIcon className={classes.menuIcon} />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n          <Box m={2} mb={0} borderBottom={1} fontWeight=\"fontWeightBold\">\n            <Typography>{workspaceName.name}</Typography>\n          </Box>\n          <List>\n            <ListItem button component={NavLink} to=\"/\" exact>\n              <ListItemIcon className={classes.icon}>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"ホーム\" />\n            </ListItem>\n            <ListItem button component={NavLink} to=\"/mytask\" exact>\n              <ListItemIcon className={classes.icon}>\n                <CheckCircleOutlineIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"マイタスク\" />\n            </ListItem>\n            <ListItem button component={NavLink} to=\"/work_manage\" exact>\n              <ListItemIcon className={classes.icon}>\n                <QueryBuilderIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"勤怠管理\" />\n            </ListItem>\n            <ListItem button component={NavLink} to=\"/members\" exact>\n              <ListItemIcon className={classes.icon}>\n                <GroupIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"メンバー管理\" />\n            </ListItem>\n            <ListItem button component={NavLink} to=\"/project_manage\" exact>\n              <ListItemIcon className={classes.icon}>\n                <WorkIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"プロジェクト管理\" />\n            </ListItem>\n          </List>\n          <MyProject />\n        </Drawer>\n      </Container>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport SideBar from \"./SideBar\";\n\nconst MainNavigation = () => {\n  return (\n    <>\n      <SideBar />\n    </>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VwDrawer from \"../../../shared/components/Common/VwDrawer\";\nimport {\n  selectAddProjectButton,\n  toggleAddProjectButton,\n} from \"../../../appSlice\";\nimport * as Yup from \"yup\";\nimport { Field, Form, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Color from \"../../../shared/util/color\";\nimport { Box } from \"@material-ui/core\";\nimport { fetchAsyncCreateProject } from \"../projectSlice\";\nimport { selectWorkspace } from \"../../../Auth/authSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  formArea: {\n    backgroundColor: Color.VWORK_BLACK,\n    paddingTop: theme.spacing(8),\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst NewProjectDrawer = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const addProjectClicked = useSelector(selectAddProjectButton);\n  const workspace = useSelector(selectWorkspace);\n\n  interface initialValuesType {\n    name: string;\n    description: string;\n  }\n\n  const initialValues: initialValuesType = {\n    name: \"\",\n    description: \"\",\n  };\n\n  return (\n    <>\n      <VwDrawer\n        open={addProjectClicked}\n        click={() => dispatch(toggleAddProjectButton(false))}\n      >\n        <Container maxWidth=\"md\">\n          <Box mt={5} mb={2} borderBottom={1}>\n            <Typography variant=\"h5\">プロジェクト追加</Typography>\n          </Box>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              name: Yup.string().required(\"プロジェクト名を入力してください。\"),\n              description: Yup.string().required(\n                \"プロジェクトの詳細を入力してください。\"\n              ),\n            })}\n            onSubmit={async (values, actions) => {\n              await dispatch(\n                fetchAsyncCreateProject({\n                  workspace: workspace,\n                  projectData: {\n                    name: values.name,\n                    description: values.description,\n                  },\n                })\n              );\n              dispatch(toggleAddProjectButton(false));\n            }}\n          >\n            <Form className={classes.form}>\n              <Field\n                component={TextField}\n                name=\"name\"\n                label=\"プロジェクト名\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"name\"\n              />\n              <br />\n              <Field\n                component={TextField}\n                label=\"詳細\"\n                fullWidth\n                multiline\n                variant=\"outlined\"\n                margin=\"normal\"\n                name=\"description\"\n                id=\"description\"\n                rows={4}\n              />\n              <br />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                作成\n              </Button>\n            </Form>\n          </Formik>\n        </Container>\n      </VwDrawer>\n    </>\n  );\n};\n\nexport default NewProjectDrawer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VwDrawer from \"../../shared/components/Common/VwDrawer\";\nimport {\n  selectInviteMemberClicked,\n  toggleInviteMemberClicked,\n  toggleLoading,\n} from \"../../appSlice\";\n\nimport { Field, Form, Formik, FieldArray } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { TextField } from \"formik-material-ui\";\nimport { Box } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { selectWorkspace } from \"../../Auth/authSlice\";\nimport { fetchAsyncInviteMember } from \"../dashboardSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    formArea: {\n      overflowY: \"scroll\",\n      overflowX: \"hidden\",\n      height: \"33vh\",\n    },\n  })\n);\n\nconst InviteMemberInAddIconDrawer = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const inviteMemberClicked = useSelector(selectInviteMemberClicked);\n  const workspace = useSelector(selectWorkspace);\n\n  return (\n    <>\n      <VwDrawer\n        open={inviteMemberClicked}\n        click={() => dispatch(toggleInviteMemberClicked(false))}\n      >\n        <Container>\n          <Box mt={5} mb={2} borderBottom={1}>\n            <Typography variant=\"h5\">メンバー招待</Typography>\n          </Box>\n          <Formik\n            initialValues={{\n              invitations: [{ name: \"\", email: \"\" }],\n            }}\n            validationSchema={Yup.object().shape({\n              invitations: Yup.array().of(\n                Yup.object().shape({\n                  email: Yup.string()\n                    .email(\"有効なメールアドレスを入力してください。\")\n                    .required(\"emailは必須です。\"),\n                  name: Yup.string().required(\"氏名は必須です。\"),\n                })\n              ),\n            })}\n            onSubmit={async (values) => {\n              dispatch(toggleLoading(true));\n              await dispatch(\n                fetchAsyncInviteMember({\n                  workspace,\n                  invitations: values.invitations,\n                })\n              );\n              dispatch(toggleLoading(false));\n              dispatch(toggleInviteMemberClicked(false));\n            }}\n          >\n            {({ values }) => (\n              <Form className={classes.formArea}>\n                <FieldArray\n                  name=\"invitations\"\n                  render={(arrayHelpers) => (\n                    <div>\n                      {values.invitations.map((invitation, index) => (\n                        <div key={index}>\n                          <Grid container spacing={3}>\n                            <Grid item xs={5}>\n                              <Field\n                                component={TextField}\n                                label=\"氏名*\"\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                id={`name.${index}`}\n                                name={`invitations[${index}].name`}\n                              />\n                            </Grid>\n                            <Grid item xs={5}>\n                              <Field\n                                component={TextField}\n                                type=\"email\"\n                                label=\"メールアドレス*\"\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                id={`email.${index}`}\n                                name={`invitations[${index}].email`}\n                              />\n                            </Grid>\n                            <Grid item xs={1}>\n                              <Box\n                                display=\"flex\"\n                                alignItems=\"center\"\n                                height=\"100%\"\n                              >\n                                <IconButton\n                                  aria-label=\"delete\"\n                                  onClick={() => arrayHelpers.remove(index)}\n                                >\n                                  <DeleteIcon />\n                                </IconButton>\n                              </Box>\n                            </Grid>\n                          </Grid>\n                        </div>\n                      ))}\n                      <br />\n                      <Button\n                        color=\"primary\"\n                        onClick={() =>\n                          arrayHelpers.push({ name: \"\", email: \"\" })\n                        }\n                      >\n                        さらに追加\n                      </Button>\n                      <Box mt={3}>\n                        <DialogActions>\n                          <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                          >\n                            招待する\n                          </Button>\n                        </DialogActions>\n                      </Box>\n                    </div>\n                  )}\n                />\n              </Form>\n            )}\n          </Formik>\n        </Container>\n      </VwDrawer>\n    </>\n  );\n};\n\nexport default InviteMemberInAddIconDrawer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VwDrawer from \"../../../shared/components/Common/VwDrawer\";\nimport {\n  selectSetProfileClicked,\n  toggleLoading,\n  toggleSetProfileClicked,\n} from \"../../../appSlice\";\nimport Container from \"@material-ui/core/Container\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Field, Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"formik-material-ui\";\nimport Color from \"../../../shared/util/color\";\nimport { fetchAsyncUpdateUserProfile } from \"../../../Dashboard/dashboardSlice\";\nimport {\n  selectProfile,\n  selectUser,\n  selectWorkspace,\n} from \"../../../Auth/authSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  formArea: {\n    backgroundColor: Color.VWORK_BLACK,\n    paddingTop: theme.spacing(8),\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SetProfileInAvatarIconDrawer = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const profileClicked = useSelector(selectSetProfileClicked);\n  const workspace = useSelector(selectWorkspace);\n  const user = useSelector(selectUser);\n  const profile = useSelector(selectProfile);\n\n  interface initialValuesType {\n    name: string;\n    email: string;\n    position: string;\n  }\n\n  const initialValues: initialValuesType = {\n    name: user.name,\n    email: user.email,\n    position: profile ? profile.position : \"\",\n  };\n\n  return (\n    <>\n      <VwDrawer\n        open={profileClicked}\n        click={() => dispatch(toggleSetProfileClicked(false))}\n      >\n        <Container maxWidth=\"md\">\n          <Box mt={5} mb={2} borderBottom={1}>\n            <Typography variant=\"h5\">プロフィール設定</Typography>\n          </Box>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              name: Yup.string().required(\"氏名は必須です。\"),\n            })}\n            onSubmit={async (values, actions) => {\n              actions.setSubmitting(false);\n\n              dispatch(toggleLoading(true));\n              await dispatch(\n                fetchAsyncUpdateUserProfile({\n                  workspace,\n                  userId: user._id,\n                  bodyData: values,\n                })\n              );\n              dispatch(toggleLoading(false));\n              dispatch(toggleSetProfileClicked(false));\n            }}\n          >\n            {(props) => (\n              <Form className={classes.form}>\n                <Field\n                  component={TextField}\n                  name=\"name\"\n                  label=\"氏名*\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  id=\"name\"\n                  value={props.values.name}\n                >\n                  {props.values.name}\n                </Field>\n                <br />\n                <Field\n                  component={TextField}\n                  label=\"メールアドレス\"\n                  fullWidth\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  id=\"email\"\n                  value={props.values.email}\n                >\n                  {props.values.email}\n                </Field>\n                <Field\n                  component={TextField}\n                  label=\"役職・担当\"\n                  fullWidth\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  name=\"position\"\n                  id=\"position\"\n                  value={props.values.position}\n                >\n                  {props.values.position}\n                </Field>\n                <br />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  更新\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Container>\n      </VwDrawer>\n    </>\n  );\n};\n\nexport default SetProfileInAvatarIconDrawer;\n","// TODO: 追加 or 変更した時にsnackcbarを表示\nimport React, { FC } from \"react\";\nimport * as Yup from \"yup\";\nimport { Field, Form, Formik } from \"formik\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectWorkspace } from \"../../../Auth/authSlice\";\n\nimport { TextField, Select, CheckboxWithLabel } from \"formik-material-ui\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { Box, Slider } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { DatePicker } from \"formik-material-ui-pickers\";\nimport { ja } from \"date-fns/locale\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport FlagIcon from \"@material-ui/icons/Flag\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\nimport SubjectIcon from \"@material-ui/icons/Subject\";\nimport { selectSelectedMembers } from \"../../dashboardSlice\";\nimport { selectProject } from \"../../Project/projectSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: \"100%\",\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    labelIcon: {\n      marginRight: theme.spacing(1),\n    },\n    formContent: {\n      marginBottom: theme.spacing(1),\n    },\n  })\n);\n\nconst TASK_STATE = [\"TODO\", \"進行中\", \"完了\"];\nconst TASK_PRIORITY = [\"低\", \"中\", \"高\"];\n\ninterface TaskFormProps {\n  taskData: {\n    user: string;\n    name: string;\n    description: string;\n    startDateAt: string;\n    endDateAt: string;\n    state: number;\n    progress: number;\n    priority: number;\n    project: string | null;\n    todaysTask: boolean;\n  };\n  projects: { id: string; name: string }[];\n  submitFunction: (\n    value: {\n      user: string;\n      name: string;\n      description: string;\n      startDateAt: string;\n      endDateAt: string;\n      state: number;\n      progress: number;\n      priority: number;\n      project: string | null;\n      todaysTask: boolean;\n    },\n    workspace: string\n  ) => Promise<void>;\n}\n\nconst TaskForm: FC<TaskFormProps> = ({\n  projects,\n  submitFunction,\n  taskData,\n}) => {\n  const classes = useStyles();\n  const workspace = useSelector(selectWorkspace);\n  const project = useSelector(selectProject);\n\n  const members = useSelector(selectSelectedMembers);\n\n  if (!taskData.startDateAt) {\n    taskData.startDateAt = moment().toString();\n  }\n  if (!taskData.endDateAt) {\n    taskData.endDateAt = moment().add(1, \"days\").toString();\n  }\n\n  if (!taskData.todaysTask) {\n    taskData.todaysTask = false;\n  }\n\n  if (!taskData.project) {\n    if (project._id) {\n      taskData.project = project._id;\n    } else {\n      taskData.project = \"\";\n    }\n  }\n\n  interface TaskFormValues {\n    user: string;\n    name: string;\n    description: string;\n    startDateAt: string;\n    endDateAt: string;\n    state: number;\n    progress: number;\n    priority: number;\n    project: string | null;\n    todaysTask: boolean;\n  }\n\n  const initialValues: TaskFormValues = {\n    user: taskData.user,\n    name: taskData.name,\n    description: taskData.description,\n    startDateAt: taskData.startDateAt,\n    endDateAt: taskData.endDateAt,\n    state: taskData.state,\n    progress: taskData.progress,\n    priority: taskData.priority,\n    project: taskData.project || \"\",\n    todaysTask: taskData.todaysTask,\n  };\n\n  return (\n    <div>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={Yup.object().shape({\n          user: Yup.string().required(\"担当者を選択してください\"),\n          name: Yup.string()\n            .max(24, \"24文字以内で入力してください\")\n            .required(\"タスク名は必須です。\"),\n        })}\n        onSubmit={async (value, actions) => {\n          actions.setSubmitting(false);\n\n          let submitData = { ...value };\n          if (!submitData.project) {\n            submitData.project = null;\n          }\n\n          await submitFunction(submitData, workspace);\n        }}\n      >\n        {(props) => (\n          <Form>\n            <Grid container spacing={4}>\n              <Grid item xs={10}>\n                <Field\n                  component={TextField}\n                  name=\"name\"\n                  label=\"タスク名\"\n                  fullWidth\n                  id=\"name\"\n                  value={props.values.name}\n                />\n              </Grid>\n              <Grid item xs={2}>\n                <DialogActions>\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    保存\n                  </Button>\n                </DialogActions>\n              </Grid>\n            </Grid>\n            <Field\n              component={CheckboxWithLabel}\n              type=\"checkbox\"\n              name=\"todaysTask\"\n              Label={{ label: \"今日やる\" }}\n              checked={props.values.todaysTask}\n            />\n            <Grid container className={classes.formContent}>\n              <Grid item xs={2}>\n                <Box height=\"100%\" display=\"flex\" alignItems=\"center\">\n                  <PersonIcon color=\"disabled\" className={classes.labelIcon} />\n                  担当者\n                </Box>\n              </Grid>\n              <Grid item xs={8}>\n                <FormControl className={classes.formControl}>\n                  <Field\n                    component={TextField}\n                    name=\"user\"\n                    id=\"user\"\n                    defaultValue={props.values.user}\n                    select\n                    onChange={props.handleChange(\"user\")}\n                    inputProps={{\n                      id: \"user\",\n                    }}\n                  >\n                    <MenuItem value=\"\">\n                      <em>未選択</em>\n                    </MenuItem>\n                    {members &&\n                      members.map((user, index) => {\n                        return (\n                          <MenuItem value={user._id.toString()} key={index}>\n                            {user.name.toString()}\n                          </MenuItem>\n                        );\n                      })}\n                  </Field>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.formContent}>\n              <Grid item xs={2}>\n                <Box height=\"100%\" display=\"flex\" alignItems=\"center\">\n                  <DateRangeIcon\n                    color=\"disabled\"\n                    className={classes.labelIcon}\n                  />\n                  期日\n                </Box>\n              </Grid>\n              <Grid item xs={8}>\n                <FormControl className={classes.formControl}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ja}>\n                    <Grid container spacing={2}>\n                      <Grid item>\n                        <Field\n                          component={DatePicker}\n                          name=\"startDateAt\"\n                          label=\"開始\"\n                          id=\"startDateAt\"\n                          value={props.values.startDateAt}\n                        />\n                      </Grid>\n                      <Grid item>\n                        <Field\n                          component={DatePicker}\n                          name=\"endDateAt\"\n                          label=\"終了\"\n                          id=\"endDateAt\"\n                          value={props.values.endDateAt}\n                        />\n                      </Grid>\n                    </Grid>\n                  </MuiPickersUtilsProvider>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.formContent}>\n              <Grid item xs={2}>\n                <Box height=\"100%\" display=\"flex\" alignItems=\"center\">\n                  <DashboardIcon\n                    color=\"disabled\"\n                    className={classes.labelIcon}\n                  />\n                  プロジェクト\n                </Box>\n              </Grid>\n              <Grid item xs={8}>\n                <FormControl className={classes.formControl}>\n                  <InputLabel htmlFor=\"project\">プロジェクト</InputLabel>\n                  <Field\n                    component={Select}\n                    name=\"project\"\n                    id=\"project\"\n                    as=\"select\"\n                    defaultValue={props.values.project}\n                    inputProps={{\n                      id: \"project\",\n                    }}\n                  >\n                    <MenuItem value=\"\">未選択</MenuItem>\n                    {projects.map((project, index) => {\n                      return (\n                        <MenuItem value={project.id} key={index}>\n                          {project.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Field>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.formContent}>\n              <Grid item xs={2}>\n                <Box height=\"100%\" display=\"flex\" alignItems=\"center\">\n                  <CheckCircleIcon\n                    color=\"disabled\"\n                    className={classes.labelIcon}\n                  />\n                  タスク状況\n                </Box>\n              </Grid>\n              <Grid item xs={8}>\n                <FormControl className={classes.formControl}>\n                  <Field\n                    component={Select}\n                    name=\"state\"\n                    id=\"state\"\n                    as=\"select\"\n                    defaultValue={props.values.state}\n                    inputProps={{\n                      id: \"state\",\n                    }}\n                  >\n                    <MenuItem value={0}>{TASK_STATE[0]}</MenuItem>\n                    <MenuItem value={1}>{TASK_STATE[1]}</MenuItem>\n                    <MenuItem value={2}>{TASK_STATE[2]}</MenuItem>\n                  </Field>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.formContent}>\n              <Grid item xs={2}>\n                <Box height=\"100%\" display=\"flex\" alignItems=\"center\">\n                  <HighlightIcon\n                    color=\"disabled\"\n                    className={classes.labelIcon}\n                  />\n                  優先度\n                </Box>\n              </Grid>\n              <Grid item xs={8}>\n                <FormControl className={classes.formControl}>\n                  <Field\n                    component={Select}\n                    name=\"priority\"\n                    id=\"priority\"\n                    defaultValue={props.values.priority}\n                    as=\"select\"\n                    inputProps={{\n                      id: \"priority\",\n                    }}\n                  >\n                    <MenuItem value={0}>{TASK_PRIORITY[0]}</MenuItem>\n                    <MenuItem value={1}>{TASK_PRIORITY[1]}</MenuItem>\n                    <MenuItem value={2}>{TASK_PRIORITY[2]}</MenuItem>\n                  </Field>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container className={classes.formContent}>\n              <Grid item xs={2}>\n                <Box height=\"100%\" display=\"flex\" alignItems=\"center\">\n                  <FlagIcon color=\"disabled\" className={classes.labelIcon} />\n                  進捗\n                </Box>\n              </Grid>\n              <Grid item xs={8}>\n                <FormControl className={classes.formControl}>\n                  <Slider\n                    color=\"secondary\"\n                    name=\"progress\"\n                    id=\"progress\"\n                    value={props.values.progress}\n                    min={0}\n                    max={100}\n                    step={10}\n                    valueLabelDisplay=\"auto\"\n                    onChange={(event, value) =>\n                      props.setFieldValue(\"progress\", value)\n                    }\n                  />\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container>\n              <Grid item xs={2}>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <SubjectIcon color=\"disabled\" className={classes.labelIcon} />\n                  詳細\n                </Box>\n              </Grid>\n              <Grid item xs={8}>\n                <FormControl className={classes.formControl}>\n                  <Field\n                    component={TextField}\n                    name=\"description\"\n                    label=\"詳細\"\n                    variant=\"filled\"\n                    margin=\"none\"\n                    fullWidth\n                    multiline\n                    id=\"description\"\n                    value={props.values.description}\n                    rows={4}\n                  />\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default TaskForm;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport VwDrawer from \"../../../shared/components/Common/VwDrawer\";\nimport {\n  selectTaskCardClicked,\n  toggleTaskCardClicked,\n} from \"../../../appSlice\";\nimport {\n  fetchAsyncNearDeadlineTasks,\n  fetchAsyncProjectTasks,\n  fetchAsyncRecentTasks,\n  fetchAsyncTask,\n  fetchAsyncTasks,\n  fetchAsyncUpdateTask,\n  selectSelectedTask,\n  selectTask,\n  selectTaskQuery,\n  setTask,\n} from \"../taskSlice\";\nimport TaskForm from \"./TaskForm\";\nimport { selectProject, selectProjects } from \"../../Project/projectSlice\";\n\nimport { Box, Container } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst TaskCardClickedDrawer = () => {\n  const project = useSelector(selectProject);\n\n  const dispatch = useDispatch();\n  const taskCardClicked = useSelector(selectTaskCardClicked);\n\n  const taskQuery = useSelector(selectTaskQuery);\n\n  const taskId = useSelector(selectSelectedTask);\n\n  let task = useSelector(selectTask);\n\n  const getTask = useCallback(\n    async (taskId) => {\n      await dispatch(fetchAsyncTask(taskId));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    getTask(taskId);\n  }, [getTask, taskId]);\n\n  const projects = useSelector(selectProjects);\n  const projectData = projects.map((data) => {\n    return { id: data._id, name: data.name };\n  });\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  // taskはreadonly propertyだから新しい変数に渡す\n  const taskData = { ...task };\n\n  const pathName = window.location.pathname;\n\n  const submitFunction = async (\n    value: {\n      user: string;\n      name: string;\n      description: string;\n      startDateAt: string;\n      endDateAt: string;\n      state: number;\n      progress: number;\n      priority: number;\n      project: string | null;\n      todaysTask: boolean;\n    },\n    workspace: string\n  ) => {\n    await dispatch(fetchAsyncUpdateTask({ id: taskId, task: value }));\n    if (pathName.includes(\"project\")) {\n      await dispatch(fetchAsyncProjectTasks(project._id));\n    } else if (pathName.includes(\"mytask\")) {\n      await dispatch(fetchAsyncTasks({ workspace, query: taskQuery }));\n    } else {\n      await dispatch(fetchAsyncRecentTasks(workspace));\n      await dispatch(fetchAsyncNearDeadlineTasks(workspace));\n    }\n  };\n\n  return (\n    <>\n      <VwDrawer\n        open={taskCardClicked}\n        click={() => {\n          dispatch(toggleTaskCardClicked(false));\n          dispatch(\n            setTask({\n              user: \"\",\n              name: \"\",\n              description: \"\",\n              startDateAt: \"\",\n              endDateAt: \"\",\n              state: 0,\n              progress: 0,\n              priority: 0,\n              project: \"\",\n              todaysTask: false,\n            })\n          );\n        }}\n      >\n        <Container maxWidth=\"md\">\n          <Box textAlign=\"right\" mt={2}>\n            <IconButton\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              aria-label=\"more\"\n              onClick={handleClick}\n            >\n              <MoreVertIcon />\n            </IconButton>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <MenuItem\n                onClick={() => {\n                  if (window.confirm(\"削除してもよろしいですか？\")) {\n                    console.log(\"削除した\");\n                  }\n                }}\n              >\n                削除\n              </MenuItem>\n            </Menu>\n          </Box>\n          <TaskForm\n            projects={projectData}\n            submitFunction={submitFunction}\n            taskData={taskData}\n          />\n        </Container>\n      </VwDrawer>\n    </>\n  );\n};\n\nexport default TaskCardClickedDrawer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VwDrawer from \"../../../shared/components/Common/VwDrawer\";\nimport { selectAddTaskButton, toggleAddTaskButton } from \"../../../appSlice\";\nimport { selectProject, selectProjects } from \"../../Project/projectSlice\";\nimport TaskForm from \"./TaskForm\";\nimport {\n  fetchAsyncAddTask,\n  fetchAsyncNearDeadlineTasks,\n  fetchAsyncProjectTasks,\n  fetchAsyncRecentTasks,\n  fetchAsyncTasks,\n} from \"../taskSlice\";\nimport Box from \"@material-ui/core/Box\";\nimport { Container } from \"@material-ui/core\";\n\nconst NewTaskAddDrawer = () => {\n  const dispatch = useDispatch();\n  const taskAddButton = useSelector(selectAddTaskButton);\n\n  const project = useSelector(selectProject);\n  const projects = useSelector(selectProjects);\n  const projectData = projects.map((data) => {\n    return { id: data._id, name: data.name };\n  });\n\n  const taskData = {\n    user: \"\",\n    name: \"\",\n    description: \"\",\n    startDateAt: \"\",\n    endDateAt: \"\",\n    state: 0,\n    progress: 0,\n    priority: 0,\n    project: \"\",\n    todaysTask: false,\n  };\n\n  const pathName = window.location.pathname;\n\n  const submitFunction = async (\n    value: {\n      user: string;\n      name: string;\n      description: string;\n      startDateAt: string;\n      endDateAt: string;\n      state: number;\n      progress: number;\n      priority: number;\n      project: string | null;\n      todaysTask: boolean;\n    },\n    workspace: string\n  ) => {\n    await dispatch(fetchAsyncAddTask({ task: value, workspace }));\n    if (pathName.includes(\"project\")) {\n      await dispatch(fetchAsyncProjectTasks(project._id));\n    } else if (pathName.includes(\"mytask\")) {\n      await dispatch(fetchAsyncTasks({ workspace }));\n    } else {\n      await dispatch(fetchAsyncRecentTasks(workspace));\n      await dispatch(fetchAsyncNearDeadlineTasks(workspace));\n    }\n    dispatch(toggleAddTaskButton(false));\n  };\n  return (\n    <>\n      {taskAddButton ? (\n        <VwDrawer\n          open={taskAddButton}\n          click={() => dispatch(toggleAddTaskButton(false))}\n        >\n          <Container maxWidth=\"md\">\n            <Box mt={5}>\n              <TaskForm\n                projects={projectData}\n                submitFunction={submitFunction}\n                taskData={taskData}\n              />\n            </Box>\n          </Container>\n        </VwDrawer>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default NewTaskAddDrawer;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Color from \"../../../shared/util/color\";\nimport TaskList from \"../../Task/components/TaskList\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport { toggleKintaiCardClicked } from \"../../../appSlice\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport { selectAttendance } from \"../attendanceSlice\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      borderRadius: 10,\n      backgroundColor: Color.VWORK_LIGHT_BLUE,\n      height: 185,\n      marginTop: 25,\n      width: \"60%\",\n    },\n    title: {\n      fontSize: 20,\n    },\n  })\n);\n// TODO: タスクDrawerから勤怠Drawerに戻るボタンが欲しい\nconst CheckAttendanceAreaInDetail = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const attendance = useSelector(selectAttendance);\n\n  return (\n    <>\n      <Container maxWidth=\"md\">\n        <Box mt={6}>\n          <Grid container direction=\"column\">\n            <Grid item>\n              <Box borderBottom={1}>\n                <Typography variant=\"h5\">\n                  {attendance.data && attendance.data.createdAt\n                    ? moment(attendance.data.createdAt)\n                        .utcOffset(\"+09:00\")\n                        .format(\"YYYY年MM月DD日\")\n                    : \"\"}\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item>\n              <Box mb={3}>\n                <Card className={classes.root}>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    className={classes.title}\n                  >\n                    <Box mt={3} ml={3}>\n                      <Grid item>\n                        出社:\n                        {attendance.data && attendance.data.startedAt\n                          ? moment(attendance.data.startedAt)\n                              .utcOffset(\"+09:00\")\n                              .format(\"HH:mm\")\n                          : \"\"}\n                      </Grid>\n                    </Box>\n                    <Box mt={3} ml={3}>\n                      <Grid item>\n                        休憩:\n                        {attendance.data && attendance.data.restStartedAt\n                          ? moment(attendance.data.restStartedAt)\n                              .utcOffset(\"+09:00\")\n                              .format(\"HH:mm\")\n                          : \"\"}\n                        ~\n                        {attendance.data && attendance.data.restEndedAt\n                          ? moment(attendance.data.restEndedAt)\n                              .utcOffset(\"+09:00\")\n                              .format(\"HH:mm\")\n                          : \"\"}\n                      </Grid>\n                    </Box>\n                    <Box mt={3} ml={3}>\n                      <Grid item>\n                        退社:\n                        {attendance.data && attendance.data.endedAt\n                          ? moment(attendance.data.endedAt)\n                              .utcOffset(\"+09:00\")\n                              .format(\"HH:mm\")\n                          : \"\"}\n                      </Grid>\n                    </Box>\n                  </Grid>\n                </Card>\n              </Box>\n            </Grid>\n            <Box mt={5}>\n              <Grid item>\n                <Grid container direction=\"column\" justify=\"flex-start\">\n                  <Grid item>\n                    <Grid container direction=\"row\">\n                      <Box mr={2}>\n                        <Grid item>\n                          <ChatBubbleIcon />\n                        </Grid>\n                      </Box>\n                      <Grid item className={classes.title}>\n                        振り返り\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Box mt={1}>\n                    <Grid item>\n                      <Typography variant=\"body1\">\n                        {attendance.data && attendance.data.comment}\n                      </Typography>\n                    </Grid>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Box>\n            <Box>\n              <Grid\n                item\n                onClick={() => dispatch(toggleKintaiCardClicked(false))}\n              >\n                <TaskList title=\"対応タスク\" taskData={attendance.tasks} />\n              </Grid>\n            </Box>\n          </Grid>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default CheckAttendanceAreaInDetail;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CheckAttendanceAreaInDetail from \"./CheckAttendanceAreaInDetail\";\nimport VwDrawer from \"../../../shared/components/Common/VwDrawer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport {\n  selectKintaiCardClicked,\n  toggleKintaiCardClicked,\n} from \"../../../appSlice\";\nimport {\n  fetchAsyncGetAttendance,\n  selectSelectedAttenances,\n} from \"../attendanceSlice\";\nimport { selectWorkspace } from \"../../../Auth/authSlice\";\nimport { setAttendance } from \"../attendanceSlice\";\n\nconst KintaiCardClickedDrawer = () => {\n  const dispatch = useDispatch();\n  const kintaiCardClicked = useSelector(selectKintaiCardClicked);\n  const selectedAttendance = useSelector(selectSelectedAttenances);\n  const workspace = useSelector(selectWorkspace);\n\n  const getAttendance = useCallback(\n    async (workspace, selectedAttendance) => {\n      await dispatch(\n        fetchAsyncGetAttendance({\n          workspace: workspace,\n          id: selectedAttendance,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (workspace && selectedAttendance) {\n      getAttendance(workspace, selectedAttendance);\n    }\n  }, [getAttendance, workspace, selectedAttendance]);\n\n  return (\n    <>\n      <VwDrawer\n        open={kintaiCardClicked}\n        click={() => {\n          dispatch(toggleKintaiCardClicked(false));\n          dispatch(\n            setAttendance({\n              tasks: [],\n              _id: \"\",\n              user: \"\",\n              workspace: \"\",\n              createdAt: \"\",\n              startedAt: \"\",\n              endedAt: \"\",\n              restStartedAt: \"\",\n              restEndedAt: \"\",\n              comment: \"\",\n            })\n          );\n        }}\n      >\n        <Grid container direction=\"column\">\n          <Container maxWidth=\"md\">\n            <Grid item>\n              <CheckAttendanceAreaInDetail />\n            </Grid>\n          </Container>\n        </Grid>\n      </VwDrawer>\n    </>\n  );\n};\n\nexport default KintaiCardClickedDrawer;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport VwDrawer from \"../../../shared/components/Common/VwDrawer\";\nimport TaskList from \"../../Task/components/TaskList\";\nimport {\n  selectMemberIconClicked,\n  toggleMemberIconClicked,\n} from \"../../../appSlice\";\nimport { selectWorkspace } from \"../../../Auth/authSlice\";\nimport {\n  fetchAsyncGetProjectMember,\n  selectProject,\n  selectProjectMember,\n  selectSelectedProjectMember,\n  setProjectMember,\n} from \"../projectSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    closeIcon: {\n      padding: 0,\n    },\n    profile: {\n      fontSize: 20,\n    },\n    profileTitle: {\n      color: \"#9e9e9e\",\n    },\n    profileItem: {\n      margin: 0,\n    },\n  })\n);\n\nconst ProjectMemberClickedDrawer = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const workspace = useSelector(selectWorkspace);\n  const MemberIconClicked = useSelector(selectMemberIconClicked);\n  const project = useSelector(selectProject);\n  const selectedProjectMember = useSelector(selectSelectedProjectMember);\n  const member = useSelector(selectProjectMember);\n\n  const getMember = useCallback(\n    async (workspaces, projectId, userId) => {\n      await dispatch(\n        fetchAsyncGetProjectMember({ workspaces, projectId, userId })\n      );\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    getMember(workspace, project._id, selectedProjectMember);\n  }, [getMember, workspace, project, selectedProjectMember]);\n\n  return (\n    <>\n      <VwDrawer\n        open={MemberIconClicked}\n        click={() => {\n          dispatch(\n            setProjectMember({\n              user: {\n                _id: \"\",\n                name: \"\",\n                email: \"\",\n                registration: false,\n                role: \"\",\n                lastAccessWorkspace: \"\",\n              },\n              tasks: [],\n              profile: { position: \"\" },\n            })\n          );\n          dispatch(toggleMemberIconClicked(false));\n        }}\n      >\n        <Box mt={13}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Container maxWidth=\"md\">\n              <Grid item>\n                <Grid container direction=\"row\" spacing={5}>\n                  <Grid item className={classes.profile}>\n                    <dl>\n                      <dt className={classes.profileTitle}>氏名</dt>\n                      <dd className={classes.profileItem}>\n                        {member.user.name}\n                      </dd>\n                    </dl>\n                  </Grid>\n                  <Grid item className={classes.profile}>\n                    <dl>\n                      <dt className={classes.profileTitle}>メールアドレス</dt>\n                      <dd className={classes.profileItem}>\n                        {member.user.email}\n                      </dd>\n                    </dl>\n                  </Grid>\n                  <Grid item className={classes.profile}>\n                    <dl>\n                      <dt className={classes.profileTitle}>役職・担当</dt>\n                      <dd className={classes.profileItem}>\n                        {member.profile && member.profile.position}\n                      </dd>\n                    </dl>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                onClick={() => dispatch(toggleMemberIconClicked(false))}\n                data-testid=\"testID\"\n              >\n                <TaskList\n                  title=\"プロジェクト内担当タスク\"\n                  taskData={member.tasks}\n                />\n              </Grid>\n            </Container>\n          </Grid>\n        </Box>\n      </VwDrawer>\n    </>\n  );\n};\n\nexport default ProjectMemberClickedDrawer;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport { Box } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    closeIcon: {\n      padding: 0,\n    },\n    profile: {\n      fontSize: 20,\n    },\n    profileTitle: {\n      color: \"#9e9e9e\",\n    },\n    profileItem: {\n      margin: 0,\n    },\n    root: {\n      flexGrow: 1,\n      maxWidth: \"60%\",\n    },\n    tabs: {\n      backgroundColor: \"#fafafa\",\n      width: \"60%\",\n    },\n  })\n);\n\nconst MemberDetail = () => {\n  const classes = useStyles();\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const history = useHistory();\n  const handlePageChangeToKintai = () => {\n    history.push(\"/members/1\");\n  };\n\n  const handlePageChangeToProject = () => {\n    history.push(\"/members/1/project\");\n  };\n\n  const handlePageChangeToTask = () => {\n    history.push(\"/members/1/task\");\n  };\n\n  return (\n    <>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <Grid container direction=\"row\" spacing={5}>\n            <Grid item className={classes.profile}>\n              <dl>\n                <dt className={classes.profileTitle}>氏名</dt>\n                {/*<dd className={classes.profileItem}>{member.user.name}</dd>*/}\n                <dd className={classes.profileItem}>Shogo</dd>\n              </dl>\n            </Grid>\n            <Grid item className={classes.profile}>\n              <dl>\n                <dt className={classes.profileTitle}>メールアドレス</dt>\n                {/*<dd className={classes.profileItem}>{member.user.email}</dd>*/}\n                <dd className={classes.profileItem}>test@test.com</dd>\n              </dl>\n            </Grid>\n            <Grid item className={classes.profile}>\n              <dl>\n                <dt className={classes.profileTitle}>役職・担当</dt>\n                {/*<dd className={classes.profileItem}>*/}\n                {/*  {member.profile && member.profile.position}*/}\n                {/*</dd>*/}\n                <dd className={classes.profileItem}>CEO</dd>\n              </dl>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Box mt={5}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              variant=\"fullWidth\"\n              indicatorColor=\"secondary\"\n              textColor=\"secondary\"\n              aria-label=\"icon label tabs example\"\n              className={classes.tabs}\n            >\n              <Tab\n                icon={<QueryBuilderIcon />}\n                label=\"勤怠情報\"\n                onClick={handlePageChangeToKintai}\n              />\n              <Tab\n                icon={<WorkIcon />}\n                label=\"プロジェクト\"\n                onClick={handlePageChangeToProject}\n              />\n              <Tab\n                icon={<CheckCircleOutlineIcon />}\n                label=\"タスク\"\n                onClick={handlePageChangeToTask}\n              />\n            </Tabs>\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MemberDetail;\n","import React, { useEffect, useRef, useCallback } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport Home from \"./Home\";\nimport MyTask from \"../Task/pages/MyTask\";\nimport Members from \"../Members/pages/Members\";\nimport MyAttendance from \"../Attendance/pages/MyAttendance\";\nimport Project from \"../Project/pages/Project\";\nimport MainNavigation from \"../../shared/components/Navigation/MainNavigation\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { fetchAsyncCurrentUser, selectWorkspace } from \"../../Auth/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NewProjectDrawer from \"../Project/components/NewProjectDrawer\";\nimport InviteMemberInAddIconDrawer from \"../components/InviteMemberInAddIconDrawer\";\nimport SetProfileInAvatarIconDrawer from \"../Project/components/SetProfileInAvatarIconDrawer\";\nimport TaskCardClickedDrawer from \"../Task/components/TaskCardClickedDrawer\";\nimport NewTaskAddDrawer from \"../Task/components/NewTaskAddDrawer\";\nimport KintaiCardClickedDrawer from \"../Attendance/components/KintaiCardClickedDrawer\";\nimport { fetchAsyncAllMyProjects } from \"../Project/projectSlice\";\nimport {\n  selectOpenMenu,\n  selectAddProjectButton,\n  selectInviteMemberClicked,\n  selectSetProfileClicked,\n  selectTaskCardClicked,\n  selectAddTaskButton,\n  selectMemberIconClicked,\n  selectKintaiCardClicked,\n} from \"../../appSlice\";\nimport ProjectMemberClickedDrawer from \"../Project/components/ProjectMemberClickedDrawer\";\nimport {\n  fetchAsyncNearDeadlineTasks,\n  fetchAsyncRecentTasks,\n} from \"../Task/taskSlice\";\n\nimport { ToastContainer } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport MemberDetail from \"../Members/components/MemberDetail\";\nimport DatePickerArea from \"../Attendance/components/DatePickerArea\";\nimport AttendanceList from \"../Attendance/components/AttendanceList\";\nimport Container from \"@material-ui/core/Container\";\nimport { selectAttenances } from \"../Attendance/attendanceSlice\";\nimport ProjectList from \"../Project/components/ProjectList\";\nimport MainHeader from \"../../shared/components/Navigation/MainHeader\";\nimport TaskList from \"../Task/components/TaskList\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },\n  })\n);\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const workspace = useSelector(selectWorkspace);\n\n  const fetchUser = useCallback(async () => {\n    await dispatch(fetchAsyncCurrentUser());\n  }, [dispatch]);\n\n  const fetchProject = useCallback(async () => {\n    await dispatch(fetchAsyncAllMyProjects(workspace));\n  }, [dispatch, workspace]);\n\n  const fetchNearDeadlineTasks = useCallback(async () => {\n    await dispatch(fetchAsyncNearDeadlineTasks(workspace));\n  }, [dispatch, workspace]);\n\n  const fetchRecentTasks = useCallback(async () => {\n    await dispatch(fetchAsyncRecentTasks(workspace));\n  }, [dispatch, workspace]);\n\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (mounted.current) {\n      fetchProject();\n      fetchNearDeadlineTasks();\n      fetchRecentTasks();\n    } else {\n      fetchUser();\n      mounted.current = true;\n    }\n  }, [\n    fetchUser,\n    fetchProject,\n    fetchNearDeadlineTasks,\n    fetchRecentTasks,\n    workspace,\n  ]);\n\n  const openMenu = useSelector(selectOpenMenu);\n  const addProjectButton = useSelector(selectAddProjectButton);\n  const inviteMemberClicked = useSelector(selectInviteMemberClicked);\n  const setProfileClicked = useSelector(selectSetProfileClicked);\n  const taskCardClicked = useSelector(selectTaskCardClicked);\n  const addTaskButton = useSelector(selectAddTaskButton);\n  const memberIconClicked = useSelector(selectMemberIconClicked);\n  const kintaiCardClicked = useSelector(selectKintaiCardClicked);\n  const attendances = useSelector(selectAttenances);\n\n  return (\n    <div className={classes.root}>\n      <MainNavigation />\n      <ToastContainer hideProgressBar autoClose={2000} />\n      <CssBaseline />\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: openMenu,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {addProjectButton ? <NewProjectDrawer /> : \"\"}\n        {inviteMemberClicked ? <InviteMemberInAddIconDrawer /> : \"\"}\n        {setProfileClicked ? <SetProfileInAvatarIconDrawer /> : \"\"}\n        {taskCardClicked ? <TaskCardClickedDrawer /> : \"\"}\n        {addTaskButton ? <NewTaskAddDrawer /> : \"\"}\n        {memberIconClicked ? <ProjectMemberClickedDrawer /> : \"\"}\n        {kintaiCardClicked ? <KintaiCardClickedDrawer /> : \"\"}\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/mytask\" exact>\n            <MyTask />\n          </Route>\n          <Route path=\"/work_manage\" exact>\n            <MyAttendance />\n          </Route>\n          <Route path=\"/members\" exact>\n            <Members />\n          </Route>\n          <Route path=\"/members/1\" exact>\n            <MainHeader title=\"メンバー管理\" />\n            <Container>\n              <MemberDetail />\n              <DatePickerArea />\n              <AttendanceList attendances={attendances} />\n            </Container>\n          </Route>\n          <Route path=\"/members/1/project\" exact>\n            <MainHeader title=\"メンバー管理\" />\n            <Container>\n              <MemberDetail />\n              <ProjectList title=\"参加しているプロジェクト\" />\n            </Container>\n          </Route>\n          <Route path=\"/members/1/task\" exact>\n            <MainHeader title=\"メンバー管理\" />\n            <Container>\n              <MemberDetail />\n              <TaskList title=\"一覧\" />\n            </Container>\n          </Route>\n          <Route path=\"/project_manage\" exact>\n            <MainHeader title=\"プロジェクト管理\" />\n            <Container>\n              <ProjectList title=\"全てのプロジェクト\" />\n            </Container>\n          </Route>\n          <Route path=\"/project/:projectId\" exact>\n            <Project />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport React, { FC } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Color from \"../../shared/util/color\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    height: \"70vh\",\n    padding: theme.spacing(10, 4),\n    marginTop: theme.spacing(3),\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: Color.VWORK_WHITE,\n    borderRadius: 20,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  logoIcon: {\n    display: \"inline-block\",\n    height: 32,\n    width: 32,\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/logo192.png)`,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginRight: theme.spacing(1),\n  },\n}));\n\ninterface FormAreaProps {\n  buttonPath: string;\n  buttonText: string;\n}\n\nconst FormArea: FC<FormAreaProps> = ({ children, buttonText, buttonPath }) => {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <div className={classes.logoIcon}></div>\n          <Typography\n            display=\"inline\"\n            component=\"h2\"\n            variant=\"h4\"\n            className=\"logo\"\n          >\n            VWORK\n          </Typography>\n        </Box>\n        <Link to={buttonPath}>\n          <Button color=\"primary\" variant=\"outlined\">\n            {buttonText}\n          </Button>\n        </Link>\n      </Box>\n      <div className={classes.paper}>{children}</div>\n    </Container>\n  );\n};\n\nexport default FormArea;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Field, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport * as Yup from \"yup\";\n\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { fetchAsyncSignup } from \"../authSlice\";\nimport { toggleLoading } from \"../../appSlice\";\n\nimport Color from \"../../shared/util/color\";\nimport FormArea from \"../components/FormArea\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  formArea: {\n    backgroundColor: Color.VWORK_BLACK,\n    paddingTop: theme.spacing(8),\n  },\n  image: {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/auth/sign_up.svg)`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor: Color.VWORK_WHITE,\n    backgroundSize: \"60%\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    height: \"70vh\",\n    padding: theme.spacing(10, 4),\n    marginTop: theme.spacing(3),\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: Color.VWORK_WHITE,\n    borderRadius: 20,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  logoIcon: {\n    display: \"inline-block\",\n    height: 32,\n    width: 32,\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/logo192.png)`,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginRight: theme.spacing(1),\n  },\n}));\n// TODO: メールアドレスが同じだった時の処理を追加\n// TODO: loadingがうまく動作していない\n\nconst Signup = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid\n        item\n        container\n        xs={12}\n        sm={8}\n        md={6}\n        component={Paper}\n        elevation={6}\n        direction=\"column\"\n        alignItems=\"center\"\n        square\n        className={classes.formArea}\n      >\n        <FormArea buttonPath=\"/auth/login\" buttonText=\"ログイン\">\n          <Typography component=\"h1\" variant=\"h5\">\n            会員登録\n          </Typography>\n          <Formik\n            initialValues={{ email: \"\", password: \"\" }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email(\"有効なメールアドレスを入力してください。\")\n                .required(\"emailは必須です。\"),\n              password: Yup.string()\n                .min(6, \"6字以上入力してください\")\n                .required(\"パスワードは必須です。\"),\n            })}\n            onSubmit={async (value) => {\n              dispatch(toggleLoading(true));\n              await dispatch(fetchAsyncSignup(value));\n            }}\n          >\n            <Form className={classes.form}>\n              <Field\n                component={TextField}\n                name=\"email\"\n                type=\"email\"\n                label=\"メールアドレス*\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"email\"\n              />\n              <br />\n              <Field\n                component={TextField}\n                type=\"password\"\n                label=\"パスワード*\"\n                fullWidth\n                variant=\"outlined\"\n                margin=\"normal\"\n                name=\"password\"\n                id=\"password\"\n              />\n              <br />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                会員登録\n              </Button>\n            </Form>\n          </Formik>\n        </FormArea>\n      </Grid>\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\n    </Grid>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Field, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport * as Yup from \"yup\";\n\nimport Color from \"../../shared/util/color\";\nimport FormArea from \"../components/FormArea\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Link } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { fetchAsyncLogin } from \"../authSlice\";\nimport { toggleLoading } from \"../../appSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  formArea: {\n    backgroundColor: Color.VWORK_BLACK,\n    paddingTop: theme.spacing(8),\n  },\n  image: {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/auth/login.svg)`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor: Color.VWORK_WHITE,\n    backgroundSize: \"60%\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    height: \"70vh\",\n    padding: theme.spacing(10, 4),\n    marginTop: theme.spacing(3),\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: Color.VWORK_WHITE,\n    borderRadius: 20,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  logoIcon: {\n    display: \"inline-block\",\n    height: 32,\n    width: 32,\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/logo192.png)`,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid\n          item\n          container\n          xs={12}\n          sm={8}\n          md={6}\n          component={Paper}\n          elevation={6}\n          direction=\"column\"\n          alignItems=\"center\"\n          square\n          className={classes.formArea}\n        >\n          <FormArea buttonPath=\"/auth/signup\" buttonText=\"会員登録\">\n            <Typography component=\"h1\" variant=\"h5\">\n              ログイン\n            </Typography>\n            <Formik\n              initialValues={{ email: \"\", password: \"\" }}\n              validationSchema={Yup.object().shape({\n                email: Yup.string()\n                  .email(\"有効なメールアドレスを入力してください。\")\n                  .required(\"emailは必須です。\"),\n                password: Yup.string()\n                  .min(6, \"6字以上入力してください\")\n                  .required(\"パスワードは必須です。\"),\n              })}\n              onSubmit={async (value) => {\n                dispatch(toggleLoading(true));\n                await dispatch(fetchAsyncLogin(value));\n                dispatch(toggleLoading(false));\n              }}\n            >\n              <Form className={classes.form}>\n                <Field\n                  component={TextField}\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"メールアドレス*\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  id=\"email\"\n                />\n                <br />\n                <Field\n                  component={TextField}\n                  type=\"password\"\n                  label=\"パスワード*\"\n                  fullWidth\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n                <br />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  ログイン\n                </Button>\n              </Form>\n            </Formik>\n            <Grid container>\n              <Grid item xs>\n                <Link to=\"/auth/forgot\">\n                  <Typography variant=\"body2\" className=\"vwork-red\">\n                    パスワードをお忘れの方はこちら\n                  </Typography>\n                </Link>\n              </Grid>\n            </Grid>\n          </FormArea>\n        </Grid>\n        <Grid item xs={false} sm={4} md={6} className={classes.image} />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Field, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport * as Yup from \"yup\";\n\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { fetchAsyncForgotPassword } from \"../authSlice\";\nimport { toggleLoading } from \"../../appSlice\";\n\nimport Color from \"../../shared/util/color\";\nimport FormArea from \"../components/FormArea\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  formArea: {\n    backgroundColor: Color.VWORK_BLACK,\n    paddingTop: theme.spacing(8),\n  },\n  image: {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/auth/forgot_password.svg)`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor: Color.VWORK_WHITE,\n    backgroundSize: \"60%\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    height: \"70vh\",\n    padding: theme.spacing(10, 4),\n    marginTop: theme.spacing(3),\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: Color.VWORK_WHITE,\n    borderRadius: 20,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  logoIcon: {\n    display: \"inline-block\",\n    height: 32,\n    width: 32,\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/logo192.png)`,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst ForgotPassword = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid\n        item\n        container\n        xs={12}\n        sm={8}\n        md={6}\n        component={Paper}\n        elevation={6}\n        direction=\"column\"\n        alignItems=\"center\"\n        square\n        className={classes.formArea}\n      >\n        <FormArea buttonPath=\"/auth/login\" buttonText=\"ログイン\">\n          <Typography component=\"h1\" variant=\"h5\">\n            パスワード再設定\n          </Typography>\n          <Formik\n            initialValues={{ email: \"\" }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email(\"有効なメールアドレスを入力してください。\")\n                .required(\"emailは必須です。\"),\n            })}\n            onSubmit={async (value) => {\n              dispatch(toggleLoading(true));\n              await dispatch(fetchAsyncForgotPassword(value.email));\n            }}\n          >\n            <Form className={classes.form}>\n              <Field\n                component={TextField}\n                name=\"email\"\n                type=\"email\"\n                label=\"メールアドレス*\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"email\"\n              />\n              <br />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                申請する\n              </Button>\n            </Form>\n          </Formik>\n        </FormArea>\n      </Grid>\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\n    </Grid>\n  );\n};\n\nexport default ForgotPassword;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Field, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport * as Yup from \"yup\";\n\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { fetchAsyncResetPassword } from \"../authSlice\";\nimport { toggleLoading } from \"../../appSlice\";\n\nimport Color from \"../../shared/util/color\";\nimport FormArea from \"../components/FormArea\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  formArea: {\n    backgroundColor: Color.VWORK_BLACK,\n    paddingTop: theme.spacing(8),\n  },\n  image: {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/auth/reset_password.svg)`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor: Color.VWORK_WHITE,\n    backgroundSize: \"60%\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    height: \"70vh\",\n    padding: theme.spacing(10, 4),\n    marginTop: theme.spacing(3),\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: Color.VWORK_WHITE,\n    borderRadius: 20,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  logoIcon: {\n    display: \"inline-block\",\n    height: 32,\n    width: 32,\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/logo192.png)`,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst ResetPassword = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const resetToken = window.location.search.slice(1);\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid\n        item\n        container\n        xs={12}\n        sm={8}\n        md={6}\n        component={Paper}\n        elevation={6}\n        direction=\"column\"\n        alignItems=\"center\"\n        square\n        className={classes.formArea}\n      >\n        <FormArea buttonPath=\"/auth/login\" buttonText=\"ログイン\">\n          <Typography component=\"h1\" variant=\"h5\">\n            パスワード再設定\n          </Typography>\n          <Formik\n            initialValues={{ password: \"\" }}\n            validationSchema={Yup.object().shape({\n              password: Yup.string()\n                .min(6, \"6字以上入力してください\")\n                .required(\"パスワードは必須です。\"),\n            })}\n            onSubmit={async (value) => {\n              dispatch(toggleLoading(true));\n              await dispatch(\n                fetchAsyncResetPassword({\n                  resetToken,\n                  password: value.password,\n                })\n              );\n            }}\n          >\n            <Form className={classes.form}>\n              <Field\n                component={TextField}\n                name=\"password\"\n                type=\"password\"\n                label=\"新規パスワード*\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"password\"\n              />\n              <br />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                設定する\n              </Button>\n            </Form>\n          </Formik>\n        </FormArea>\n      </Grid>\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\n    </Grid>\n  );\n};\n\nexport default ResetPassword;\n","import React from \"react\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Color from \"../../shared/util/color\";\nimport FormArea from \"../components/FormArea\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  formArea: {\n    backgroundColor: Color.VWORK_BLACK,\n    paddingTop: theme.spacing(8),\n  },\n  image: {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/auth/send_mail.svg)`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor: Color.VWORK_WHITE,\n    backgroundSize: \"60%\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    height: \"70vh\",\n    padding: theme.spacing(10, 4),\n    marginTop: theme.spacing(3),\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: Color.VWORK_WHITE,\n    borderRadius: 20,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  logoIcon: {\n    display: \"inline-block\",\n    height: 32,\n    width: 32,\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/logo192.png)`,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst DoneForgotPassword = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid\n        item\n        container\n        xs={12}\n        sm={8}\n        md={6}\n        component={Paper}\n        elevation={6}\n        direction=\"column\"\n        alignItems=\"center\"\n        square\n        className={classes.formArea}\n      >\n        <FormArea buttonPath=\"/auth/login\" buttonText=\"ログイン\">\n          <Typography component=\"h1\" variant=\"h5\">\n            パスワード再設定の申請を受け付けました。\n          </Typography>\n          <Box my={5}>\n            <Typography variant=\"body1\">\n              入力いただいたメールアドレス宛に\n              <span className=\"vwork-red\">パスワード再設定用のURL</span>\n              を送信しました。\n            </Typography>\n          </Box>\n        </FormArea>\n      </Grid>\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\n    </Grid>\n  );\n};\n\nexport default DoneForgotPassword;\n","import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport SignUp from \"./SignUp\";\nimport Login from \"./Login\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchAsyncCurrentUser,\n  selectErrorMessage,\n  setErrorOpen,\n  selectErrorOpen,\n} from \"../authSlice\";\nimport { toggleLoading } from \"../../appSlice\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport ResetPassword from \"./ResetPassword\";\nimport DoneForgotPassword from \"./DoneForgotPassword\";\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n\n  const token = localStorage.token;\n\n  useEffect(() => {\n    if (token) {\n      dispatch(toggleLoading(true));\n      dispatch(fetchAsyncCurrentUser());\n      dispatch(toggleLoading(false));\n    }\n  }, [dispatch, token]);\n\n  const errorMessage = useSelector(selectErrorMessage);\n  const errorOpen = useSelector(selectErrorOpen);\n\n  const handleClose = () => {\n    dispatch(setErrorOpen(false));\n  };\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={errorOpen}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"error\">\n          {errorMessage}\n        </Alert>\n      </Snackbar>\n      <Switch>\n        <Route exact path=\"/auth/signup\">\n          <SignUp />\n        </Route>\n        <Route exact path=\"/auth/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/auth/forgot/complete\">\n          <DoneForgotPassword />\n        </Route>\n        <Route exact path=\"/auth/forgot\">\n          <ForgotPassword />\n        </Route>\n        <Route exact path=\"/auth/reset\">\n          <ResetPassword />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { theme } from \"./shared/util/theme\";\nimport Admin from \"./Admin/pages/Admin\";\nimport Regist from \"./Regist/pages/Regist\";\nimport WorkSpaces from \"./WorkSpaces/pages/WorkSpaces\";\nimport Dashboard from \"./Dashboard/pages/Dashboard\";\nimport Auth from \"./Auth/pages/Auth\";\nimport { selectLoader } from \"./appSlice\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport \"./App.css\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1500,\n      color: \"#fff\",\n    },\n  })\n);\n\nconst App = () => {\n  const classes = useStyles();\n  const loading = useSelector(selectLoader);\n\n  const token = localStorage.token;\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      {loading ? (\n        <Backdrop className={classes.backdrop} open>\n          <CircularProgress color=\"primary\" />\n        </Backdrop>\n      ) : (\n        \"\"\n      )}\n      <Router>\n        <Switch>\n          <Route path=\"/auth\">\n            <Auth />\n          </Route>\n          <Route path=\"/regist\">\n            <Regist />\n          </Route>\n          <Route path=\"/admin\">\n            {token ? <Admin /> : <Redirect to=\"/auth/login\" />}\n            <Admin />\n          </Route>\n          <Route path=\"/workspaces\">\n            {token ? <WorkSpaces /> : <Redirect to=\"/auth/login\" />}\n          </Route>\n          <Route path=\"/\">\n            {token ? <Dashboard /> : <Redirect to=\"/auth/login\" />}\n          </Route>\n        </Switch>\n      </Router>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"../../store\";\n\nconst apiUrl = process.env.REACT_APP_BACKEND_URL;\nconst token = localStorage.token;\n\n//　メンバー管理のメンバー一覧\nexport const fetchAsyncGetMembers = createAsyncThunk(\n  \"member/all\",\n  async (workspaceId: string) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${workspaceId}/users`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\n// メンバー管理のメンバー詳細(ユーザー選択後の名前、email、役職の取得)\n// userとprofile情報を返す\nexport const fetchAsyncGetMember = createAsyncThunk(\n  \"member/single\",\n  async (data: { workspaceId: string; id: string }) => {\n    const res = await axios.get(\n      `${apiUrl}api/v1/workspaces/${data.workspaceId}/users/${data.id}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\ninterface memberState {\n  members: {}[];\n  member: {\n    user: {};\n    profile: {};\n  };\n}\n\nconst initialState: memberState = {\n  members: [],\n  member: {\n    user: {},\n    profile: {},\n  },\n};\n\nconst userSlice = createSlice({\n  name: \"member\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncGetMembers.fulfilled, (state, action) => {\n      console.log(action.payload);\n    });\n    builder.addCase(fetchAsyncGetMember.fulfilled, (state, action) => {\n      console.log(action.payload);\n    });\n  },\n});\n\nexport const selectMembers = (state: RootState) => state.member.members;\n\nexport default userSlice.reducer;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport authReducer from \"./Auth/authSlice\";\nimport appReducer from \"./appSlice\";\nimport dashboardReducer from \"./Dashboard/dashboardSlice\";\nimport registReducer from \"./Regist/registSlice\";\nimport projectReducer from \"./Dashboard/Project/projectSlice\";\nimport taskReducer from \"./Dashboard/Task/taskSlice\";\nimport workspaceReducer from \"./WorkSpaces/workspaceSlice\";\nimport attendanceReducer from \"./Dashboard/Attendance/attendanceSlice\";\nimport memberReducer from \"./Dashboard/Members/memberSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    app: appReducer,\n    dashboard: dashboardReducer,\n    regist: registReducer,\n    project: projectReducer,\n    task: taskReducer,\n    workspace: workspaceReducer,\n    attendance: attendanceReducer,\n    member: memberReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<returnType = void> = ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}